{"/home/travis/build/npmtest/node-npmtest-mout/test.js":"/* istanbul instrument in package npmtest_mout */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-mout/lib.npmtest_mout.js":"/* istanbul instrument in package npmtest_mout */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_mout = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_mout = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-mout/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-mout && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_mout */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_mout\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_mout.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_mout.rollup.js'] =\n            local.assetsDict['/assets.npmtest_mout.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_mout.__dirname + '/lib.npmtest_mout.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/index.js":"/**@license\n * mout v1.0.0 | http://moutjs.com | MIT license\n */\n\n\n//automatically generated, do not edit!\n//run `node build` instead\nmodule.exports = {\n    'VERSION' : '1.0.0',\n    'array' : require('./array'),\n    'collection' : require('./collection'),\n    'date' : require('./date'),\n    'function' : require('./function'),\n    'lang' : require('./lang'),\n    'math' : require('./math'),\n    'number' : require('./number'),\n    'object' : require('./object'),\n    'queryString' : require('./queryString'),\n    'random' : require('./random'),\n    'string' : require('./string'),\n    'time' : require('./time'),\n    'fn' : require('./function')\n};\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array.js":"\n\n//automatically generated, do not edit!\n//run `node build` instead\nmodule.exports = {\n    'append' : require('./array/append'),\n    'collect' : require('./array/collect'),\n    'combine' : require('./array/combine'),\n    'compact' : require('./array/compact'),\n    'contains' : require('./array/contains'),\n    'difference' : require('./array/difference'),\n    'equals' : require('./array/equals'),\n    'every' : require('./array/every'),\n    'filter' : require('./array/filter'),\n    'find' : require('./array/find'),\n    'findIndex' : require('./array/findIndex'),\n    'findLast' : require('./array/findLast'),\n    'findLastIndex' : require('./array/findLastIndex'),\n    'flatten' : require('./array/flatten'),\n    'forEach' : require('./array/forEach'),\n    'groupBy' : require('./array/groupBy'),\n    'indexOf' : require('./array/indexOf'),\n    'indicesOf' : require('./array/indicesOf'),\n    'insert' : require('./array/insert'),\n    'intersection' : require('./array/intersection'),\n    'invoke' : require('./array/invoke'),\n    'join' : require('./array/join'),\n    'last' : require('./array/last'),\n    'lastIndexOf' : require('./array/lastIndexOf'),\n    'map' : require('./array/map'),\n    'max' : require('./array/max'),\n    'min' : require('./array/min'),\n    'pick' : require('./array/pick'),\n    'pluck' : require('./array/pluck'),\n    'range' : require('./array/range'),\n    'reduce' : require('./array/reduce'),\n    'reduceRight' : require('./array/reduceRight'),\n    'reject' : require('./array/reject'),\n    'remove' : require('./array/remove'),\n    'removeAll' : require('./array/removeAll'),\n    'reverse' : require('./array/reverse'),\n    'shuffle' : require('./array/shuffle'),\n    'slice' : require('./array/slice'),\n    'some' : require('./array/some'),\n    'sort' : require('./array/sort'),\n    'sortBy' : require('./array/sortBy'),\n    'split' : require('./array/split'),\n    'take' : require('./array/take'),\n    'toLookup' : require('./array/toLookup'),\n    'union' : require('./array/union'),\n    'unique' : require('./array/unique'),\n    'xor' : require('./array/xor'),\n    'zip' : require('./array/zip')\n};\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/append.js":"\n\n    /**\n     * Appends an array to the end of another.\n     * The first array will be modified.\n     */\n    function append(arr1, arr2) {\n        if (arr2 == null) {\n            return arr1;\n        }\n\n        var pad = arr1.length,\n            i = -1,\n            len = arr2.length;\n        while (++i < len) {\n            arr1[pad + i] = arr2[i];\n        }\n        return arr1;\n    }\n    module.exports = append;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/collect.js":"var append = require('./append');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Maps the items in the array and concatenates the result arrays.\n     */\n    function collect(arr, callback, thisObj){\n        callback = makeIterator(callback, thisObj);\n        var results = [];\n        if (arr == null) {\n            return results;\n        }\n\n        var i = -1, len = arr.length;\n        while (++i < len) {\n            var value = callback(arr[i], i, arr);\n            if (value != null) {\n                append(results, value);\n            }\n        }\n\n        return results;\n    }\n\n    module.exports = collect;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function/makeIterator_.js":"var identity = require('./identity');\nvar prop = require('./prop');\nvar deepMatches = require('../object/deepMatches');\n\n    /**\n     * Converts argument into a valid iterator.\n     * Used internally on most array/object/collection methods that receives a\n     * callback/iterator providing a shortcut syntax.\n     */\n    function makeIterator(src, thisObj){\n        if (src == null) {\n            return identity;\n        }\n        switch(typeof src) {\n            case 'function':\n                // function is the first to improve perf (most common case)\n                // also avoid using `Function#call` if not needed, which boosts\n                // perf a lot in some cases\n                return (typeof thisObj !== 'undefined')? function(val, i, arr){\n                    return src.call(thisObj, val, i, arr);\n                } : src;\n            case 'object':\n                return function(val){\n                    return deepMatches(val, src);\n                };\n            case 'string':\n            case 'number':\n                return prop(src);\n        }\n    }\n\n    module.exports = makeIterator;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function/identity.js":"\n\n    /**\n     * Returns the first argument provided to it.\n     */\n    function identity(val){\n        return val;\n    }\n\n    module.exports = identity;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function/prop.js":"\n\n    /**\n     * Returns a function that gets a property of the passed object\n     */\n    function prop(name){\n        return function(obj){\n            return obj[name];\n        };\n    }\n\n    module.exports = prop;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/deepMatches.js":"var forOwn = require('./forOwn');\nvar isArray = require('../lang/isArray');\n\n    function containsMatch(array, pattern) {\n        var i = -1, length = array.length;\n        while (++i < length) {\n            if (deepMatches(array[i], pattern)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function matchArray(target, pattern) {\n        var i = -1, patternLength = pattern.length;\n        while (++i < patternLength) {\n            if (!containsMatch(target, pattern[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function matchObject(target, pattern) {\n        var result = true;\n        forOwn(pattern, function(val, key) {\n            if (!deepMatches(target[key], val)) {\n                // Return false to break out of forOwn early\n                return (result = false);\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * Recursively check if the objects match.\n     */\n    function deepMatches(target, pattern){\n        if (target && typeof target === 'object' &&\n            pattern && typeof pattern === 'object') {\n            if (isArray(target) && isArray(pattern)) {\n                return matchArray(target, pattern);\n            } else {\n                return matchObject(target, pattern);\n            }\n        } else {\n            return target === pattern;\n        }\n    }\n\n    module.exports = deepMatches;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/forOwn.js":"var hasOwn = require('./hasOwn');\nvar forIn = require('./forIn');\n\n    /**\n     * Similar to Array/forEach but works over object properties and fixes Don't\n     * Enum bug on IE.\n     * based on: http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n     */\n    function forOwn(obj, fn, thisObj){\n        forIn(obj, function(val, key){\n            if (hasOwn(obj, key)) {\n                return fn.call(thisObj, obj[key], key, obj);\n            }\n        });\n    }\n\n    module.exports = forOwn;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/hasOwn.js":"\n\n    /**\n     * Safer Object.hasOwnProperty\n     */\n     function hasOwn(obj, prop){\n         return Object.prototype.hasOwnProperty.call(obj, prop);\n     }\n\n     module.exports = hasOwn;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/forIn.js":"var hasOwn = require('./hasOwn');\n\n    var _hasDontEnumBug,\n        _dontEnums;\n\n    function checkDontEnum(){\n        _dontEnums = [\n                'toString',\n                'toLocaleString',\n                'valueOf',\n                'hasOwnProperty',\n                'isPrototypeOf',\n                'propertyIsEnumerable',\n                'constructor'\n            ];\n\n        _hasDontEnumBug = true;\n\n        for (var key in {'toString': null}) {\n            _hasDontEnumBug = false;\n        }\n    }\n\n    /**\n     * Similar to Array/forEach but works over object properties and fixes Don't\n     * Enum bug on IE.\n     * based on: http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n     */\n    function forIn(obj, fn, thisObj){\n        var key, i = 0;\n        // no need to check if argument is a real object that way we can use\n        // it for arrays, functions, date, etc.\n\n        //post-pone check till needed\n        if (_hasDontEnumBug == null) checkDontEnum();\n\n        for (key in obj) {\n            if (exec(fn, obj, key, thisObj) === false) {\n                break;\n            }\n        }\n\n\n        if (_hasDontEnumBug) {\n            var ctor = obj.constructor,\n                isProto = !!ctor && obj === ctor.prototype;\n\n            while (key = _dontEnums[i++]) {\n                // For constructor, if it is a prototype object the constructor\n                // is always non-enumerable unless defined otherwise (and\n                // enumerated above).  For non-prototype objects, it will have\n                // to be defined on this object, since it cannot be defined on\n                // any prototype objects.\n                //\n                // For other [[DontEnum]] properties, check if the value is\n                // different than Object prototype value.\n                if (\n                    (key !== 'constructor' ||\n                        (!isProto && hasOwn(obj, key))) &&\n                    obj[key] !== Object.prototype[key]\n                ) {\n                    if (exec(fn, obj, key, thisObj) === false) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    function exec(fn, obj, key, thisObj){\n        return fn.call(thisObj, obj[key], key, obj);\n    }\n\n    module.exports = forIn;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isArray.js":"var isKind = require('./isKind');\n    /**\n     */\n    var isArray = Array.isArray || function (val) {\n        return isKind(val, 'Array');\n    };\n    module.exports = isArray;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isKind.js":"var kindOf = require('./kindOf');\n    /**\n     * Check if value is from a specific \"kind\".\n     */\n    function isKind(val, kind){\n        return kindOf(val) === kind;\n    }\n    module.exports = isKind;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/kindOf.js":"\n\n    var _rKind = /^\\[object (.*)\\]$/,\n        _toString = Object.prototype.toString,\n        UNDEF;\n\n    /**\n     * Gets the \"kind\" of value. (e.g. \"String\", \"Number\", etc)\n     */\n    function kindOf(val) {\n        if (val === null) {\n            return 'Null';\n        } else if (val === UNDEF) {\n            return 'Undefined';\n        } else {\n            return _rKind.exec( _toString.call(val) )[1];\n        }\n    }\n    module.exports = kindOf;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/combine.js":"var indexOf = require('./indexOf');\n\n    /**\n     * Combines an array with all the items of another.\n     * Does not allow duplicates and is case and type sensitive.\n     */\n    function combine(arr1, arr2) {\n        if (arr2 == null) {\n            return arr1;\n        }\n\n        var i = -1, len = arr2.length;\n        while (++i < len) {\n            if (indexOf(arr1, arr2[i]) === -1) {\n                arr1.push(arr2[i]);\n            }\n        }\n\n        return arr1;\n    }\n    module.exports = combine;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/indexOf.js":"\n\n    /**\n     * Array.indexOf\n     */\n    function indexOf(arr, item, fromIndex) {\n        fromIndex = fromIndex || 0;\n        if (arr == null) {\n            return -1;\n        }\n\n        var len = arr.length,\n            i = fromIndex < 0 ? len + fromIndex : fromIndex;\n        while (i < len) {\n            // we iterate over sparse items since there is no way to make it\n            // work properly on IE 7-8. see #64\n            if (arr[i] === item) {\n                return i;\n            }\n\n            i++;\n        }\n\n        return -1;\n    }\n\n    module.exports = indexOf;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/compact.js":"var filter = require('./filter');\n\n    /**\n     * Remove all null/undefined items from array.\n     */\n    function compact(arr) {\n        return filter(arr, function(val){\n            return (val != null);\n        });\n    }\n\n    module.exports = compact;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/filter.js":"var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Array filter\n     */\n    function filter(arr, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var results = [];\n        if (arr == null) {\n            return results;\n        }\n\n        var i = -1, len = arr.length, value;\n        while (++i < len) {\n            value = arr[i];\n            if (callback(value, i, arr)) {\n                results.push(value);\n            }\n        }\n\n        return results;\n    }\n\n    module.exports = filter;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/contains.js":"var indexOf = require('./indexOf');\n\n    /**\n     * If array contains values.\n     */\n    function contains(arr, val) {\n        return indexOf(arr, val) !== -1;\n    }\n    module.exports = contains;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/difference.js":"var unique = require('./unique');\nvar filter = require('./filter');\nvar some = require('./some');\nvar contains = require('./contains');\nvar slice = require('./slice');\n\n\n    /**\n     * Return a new Array with elements that aren't present in the other Arrays.\n     */\n    function difference(arr) {\n        var arrs = slice(arguments, 1),\n            result = filter(unique(arr), function(needle){\n                return !some(arrs, function(haystack){\n                    return contains(haystack, needle);\n                });\n            });\n        return result;\n    }\n\n    module.exports = difference;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/unique.js":"var filter = require('./filter');\n\n    /**\n     * @return {array} Array of unique items\n     */\n    function unique(arr, compare){\n        compare = compare || isEqual;\n        return filter(arr, function(item, i, arr){\n            var n = arr.length;\n            while (++i < n) {\n                if ( compare(item, arr[i]) ) {\n                    return false;\n                }\n            }\n            return true;\n        });\n    }\n\n    function isEqual(a, b){\n        return a === b;\n    }\n\n    module.exports = unique;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/some.js":"var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Array some\n     */\n    function some(arr, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result = false;\n        if (arr == null) {\n            return result;\n        }\n\n        var i = -1, len = arr.length;\n        while (++i < len) {\n            // we iterate over sparse items since there is no way to make it\n            // work properly on IE 7-8. see #64\n            if ( callback(arr[i], i, arr) ) {\n                result = true;\n                break;\n            }\n        }\n\n        return result;\n    }\n\n    module.exports = some;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/slice.js":"\n\n    /**\n     * Create slice of source array or array-like object\n     */\n    function slice(arr, start, end){\n        var len = arr.length;\n\n        if (start == null) {\n            start = 0;\n        } else if (start < 0) {\n            start = Math.max(len + start, 0);\n        } else {\n            start = Math.min(start, len);\n        }\n\n        if (end == null) {\n            end = len;\n        } else if (end < 0) {\n            end = Math.max(len + end, 0);\n        } else {\n            end = Math.min(end, len);\n        }\n\n        var result = [];\n        while (start < end) {\n            result.push(arr[start++]);\n        }\n\n        return result;\n    }\n\n    module.exports = slice;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/equals.js":"var is = require('../lang/is');\nvar isArray = require('../lang/isArray');\nvar every = require('./every');\n\n    /**\n     * Compares if both arrays have the same elements\n     */\n    function equals(a, b, callback){\n        callback = callback || is;\n\n        if (!isArray(a) || !isArray(b)) {\n            return callback(a, b);\n        }\n\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        return every(a, makeCompare(callback), b);\n    }\n\n    function makeCompare(callback) {\n        return function(value, i) {\n            return i in this && callback(value, this[i]);\n        };\n    }\n\n    module.exports = equals;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/is.js":"\n\n    /**\n     * Check if both arguments are egal.\n     */\n    function is(x, y){\n        // implementation borrowed from harmony:egal spec\n        if (x === y) {\n          // 0 === -0, but they are not identical\n          return x !== 0 || 1 / x === 1 / y;\n        }\n\n        // NaN !== NaN, but they are identical.\n        // NaNs are the only non-reflexive value, i.e., if x !== x,\n        // then x is a NaN.\n        // isNaN is broken: it converts its argument to number, so\n        // isNaN(\"foo\") => true\n        return x !== x && y !== y;\n    }\n\n    module.exports = is;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/every.js":"var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Array every\n     */\n    function every(arr, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result = true;\n        if (arr == null) {\n            return result;\n        }\n\n        var i = -1, len = arr.length;\n        while (++i < len) {\n            // we iterate over sparse items since there is no way to make it\n            // work properly on IE 7-8. see #64\n            if (!callback(arr[i], i, arr) ) {\n                result = false;\n                break;\n            }\n        }\n\n        return result;\n    }\n\n    module.exports = every;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/find.js":"var findIndex = require('./findIndex');\n\n    /**\n     * Returns first item that matches criteria\n     */\n    function find(arr, iterator, thisObj){\n        var idx = findIndex(arr, iterator, thisObj);\n        return idx >= 0? arr[idx] : void(0);\n    }\n\n    module.exports = find;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/findIndex.js":"var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Returns the index of the first item that matches criteria\n     */\n    function findIndex(arr, iterator, thisObj){\n        iterator = makeIterator(iterator, thisObj);\n        if (arr == null) {\n            return -1;\n        }\n\n        var i = -1, len = arr.length;\n        while (++i < len) {\n            if (iterator(arr[i], i, arr)) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    module.exports = findIndex;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/findLast.js":"var findLastIndex = require('./findLastIndex');\n\n    /**\n     * Returns last item that matches criteria\n     */\n    function findLast(arr, iterator, thisObj){\n        var idx = findLastIndex(arr, iterator, thisObj);\n        return idx >= 0? arr[idx] : void(0);\n    }\n\n    module.exports = findLast;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/findLastIndex.js":"var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Returns the index of the last item that matches criteria\n     */\n    function findLastIndex(arr, iterator, thisObj){\n        iterator = makeIterator(iterator, thisObj);\n        if (arr == null) {\n            return -1;\n        }\n\n        var n = arr.length;\n        while (--n >= 0) {\n            if (iterator(arr[n], n, arr)) {\n                return n;\n            }\n        }\n\n        return -1;\n    }\n\n    module.exports = findLastIndex;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/flatten.js":"var isArray = require('../lang/isArray');\nvar append = require('./append');\n\n    /*\n     * Helper function to flatten to a destination array.\n     * Used to remove the need to create intermediate arrays while flattening.\n     */\n    function flattenTo(arr, result, level) {\n        if (level === 0) {\n            append(result, arr);\n            return result;\n        }\n\n        var value,\n            i = -1,\n            len = arr.length;\n        while (++i < len) {\n            value = arr[i];\n            if (isArray(value)) {\n                flattenTo(value, result, level - 1);\n            } else {\n                result.push(value);\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Recursively flattens an array.\n     * A new array containing all the elements is returned.\n     * If level is specified, it will only flatten up to that level.\n     */\n    function flatten(arr, level) {\n        if (arr == null) {\n            return [];\n        }\n\n        level = level == null ? -1 : level;\n        return flattenTo(arr, [], level);\n    }\n\n    module.exports = flatten;\n\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/forEach.js":"\n\n    /**\n     * Array forEach\n     */\n    function forEach(arr, callback, thisObj) {\n        if (arr == null) {\n            return;\n        }\n        var i = -1,\n            len = arr.length;\n        while (++i < len) {\n            // we iterate over sparse items since there is no way to make it\n            // work properly on IE 7-8. see #64\n            if ( callback.call(thisObj, arr[i], i, arr) === false ) {\n                break;\n            }\n        }\n    }\n\n    module.exports = forEach;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/groupBy.js":"var forEach = require('../array/forEach');\nvar identity = require('../function/identity');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Bucket the array values.\n     */\n    function groupBy(arr, categorize, thisObj) {\n        if (categorize) {\n            categorize = makeIterator(categorize, thisObj);\n        } else {\n            // Default to identity function.\n            categorize = identity;\n        }\n\n        var buckets = {};\n        forEach(arr, function(element) {\n            var bucket = categorize(element);\n            if (!(bucket in buckets)) {\n                buckets[bucket] = [];\n            }\n\n            buckets[bucket].push(element);\n        });\n\n        return buckets;\n    }\n\n    module.exports = groupBy;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/indicesOf.js":"\n\n    /**\n     * Array indicesOf\n     */\n    function indicesOf(arr, item, fromIndex) {\n        var results = [];\n        if (arr == null) {\n            return results;\n        }\n\n        fromIndex = typeof fromIndex === 'number' ? fromIndex : 0;\n\n        var length = arr.length;\n        var cursor = fromIndex >= 0 ? fromIndex : length + fromIndex;\n\n        while (cursor < length) {\n            if (arr[cursor] === item) {\n                results.push(cursor);\n            }\n            cursor++;\n        }\n\n        return results;\n    }\n\n    module.exports = indicesOf;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/insert.js":"var difference = require('./difference');\nvar slice = require('./slice');\n\n    /**\n     * Insert item into array if not already present.\n     */\n    function insert(arr, rest_items) {\n        var diff = difference(slice(arguments, 1), arr);\n        if (diff.length) {\n            Array.prototype.push.apply(arr, diff);\n        }\n        return arr.length;\n    }\n    module.exports = insert;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/intersection.js":"var unique = require('./unique');\nvar filter = require('./filter');\nvar every = require('./every');\nvar contains = require('./contains');\nvar slice = require('./slice');\n\n\n    /**\n     * Return a new Array with elements common to all Arrays.\n     * - based on underscore.js implementation\n     */\n    function intersection(arr) {\n        var arrs = slice(arguments, 1),\n            result = filter(unique(arr), function(needle){\n                return every(arrs, function(haystack){\n                    return contains(haystack, needle);\n                });\n            });\n        return result;\n    }\n\n    module.exports = intersection;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/invoke.js":"var slice = require('./slice');\n\n    /**\n     * Call `methodName` on each item of the array passing custom arguments if\n     * needed.\n     */\n    function invoke(arr, methodName, var_args){\n        if (arr == null) {\n            return arr;\n        }\n\n        var args = slice(arguments, 2);\n        var i = -1, len = arr.length, value;\n        while (++i < len) {\n            value = arr[i];\n            value[methodName].apply(value, args);\n        }\n\n        return arr;\n    }\n\n    module.exports = invoke;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/join.js":"var filter = require('./filter');\n\n    function isValidString(val) {\n        return (val != null && val !== '');\n    }\n\n    /**\n     * Joins strings with the specified separator inserted between each value.\n     * Null values and empty strings will be excluded.\n     */\n    function join(items, separator) {\n        separator = separator || '';\n        return filter(items, isValidString).join(separator);\n    }\n\n    module.exports = join;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/last.js":"\n\n    /**\n     * Returns last element of array.\n     */\n    function last(arr){\n        if (arr == null || arr.length < 1) {\n            return undefined;\n        }\n\n        return arr[arr.length - 1];\n    }\n\n    module.exports = last;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/lastIndexOf.js":"\n\n    /**\n     * Array lastIndexOf\n     */\n    function lastIndexOf(arr, item, fromIndex) {\n        if (arr == null) {\n            return -1;\n        }\n\n        var len = arr.length;\n        fromIndex = (fromIndex == null || fromIndex >= len)? len - 1 : fromIndex;\n        fromIndex = (fromIndex < 0)? len + fromIndex : fromIndex;\n\n        while (fromIndex >= 0) {\n            // we iterate over sparse items since there is no way to make it\n            // work properly on IE 7-8. see #64\n            if (arr[fromIndex] === item) {\n                return fromIndex;\n            }\n            fromIndex--;\n        }\n\n        return -1;\n    }\n\n    module.exports = lastIndexOf;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/map.js":"var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Array map\n     */\n    function map(arr, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var results = [];\n        if (arr == null){\n            return results;\n        }\n\n        var i = -1, len = arr.length;\n        while (++i < len) {\n            results[i] = callback(arr[i], i, arr);\n        }\n\n        return results;\n    }\n\n     module.exports = map;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/max.js":"var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Return maximum value inside array\n     */\n    function max(arr, iterator, thisObj){\n        if (arr == null || !arr.length) {\n            return Infinity;\n        } else if (arr.length && !iterator) {\n            return Math.max.apply(Math, arr);\n        } else {\n            iterator = makeIterator(iterator, thisObj);\n            var result,\n                compare = -Infinity,\n                value,\n                temp;\n\n            var i = -1, len = arr.length;\n            while (++i < len) {\n                value = arr[i];\n                temp = iterator(value, i, arr);\n                if (temp > compare) {\n                    compare = temp;\n                    result = value;\n                }\n            }\n\n            return result;\n        }\n    }\n\n    module.exports = max;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/min.js":"var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Return minimum value inside array\n     */\n    function min(arr, iterator, thisObj){\n        if (arr == null || !arr.length) {\n            return -Infinity;\n        } else if (arr.length && !iterator) {\n            return Math.min.apply(Math, arr);\n        } else {\n            iterator = makeIterator(iterator, thisObj);\n            var result,\n                compare = Infinity,\n                value,\n                temp;\n\n            var i = -1, len = arr.length;\n            while (++i < len) {\n                value = arr[i];\n                temp = iterator(value, i, arr);\n                if (temp < compare) {\n                    compare = temp;\n                    result = value;\n                }\n            }\n\n            return result;\n        }\n    }\n\n    module.exports = min;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/pick.js":"var randInt = require('../random/randInt');\n\n    /**\n     * Remove random item(s) from the Array and return it.\n     * Returns an Array of items if [nItems] is provided or a single item if\n     * it isn't specified.\n     */\n    function pick(arr, nItems){\n        if (nItems != null) {\n            var result = [];\n            if (nItems > 0 && arr && arr.length) {\n                nItems = nItems > arr.length? arr.length : nItems;\n                while (nItems--) {\n                    result.push( pickOne(arr) );\n                }\n            }\n            return result;\n        }\n        return (arr && arr.length)? pickOne(arr) : void(0);\n    }\n\n\n    function pickOne(arr){\n        var idx = randInt(0, arr.length - 1);\n        return arr.splice(idx, 1)[0];\n    }\n\n\n    module.exports = pick;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/random/randInt.js":"var MIN_INT = require('../number/MIN_INT');\nvar MAX_INT = require('../number/MAX_INT');\nvar rand = require('./rand');\n\n    /**\n     * Gets random integer inside range or snap to min/max values.\n     */\n    function randInt(min, max){\n        min = min == null? MIN_INT : ~~min;\n        max = max == null? MAX_INT : ~~max;\n        // can't be max + 0.5 otherwise it will round up if `rand`\n        // returns `max` causing it to overflow range.\n        // -0.5 and + 0.49 are required to avoid bias caused by rounding\n        return Math.round( rand(min - 0.5, max + 0.499999999999) );\n    }\n\n    module.exports = randInt;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number/MIN_INT.js":"/**\n * @constant Minimum 32-bit signed integer value (-2^31).\n */\n\n    module.exports = -2147483648;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number/MAX_INT.js":"/**\n * @constant Maximum 32-bit signed integer value. (2^31 - 1)\n */\n\n    module.exports = 2147483647;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/random/rand.js":"var random = require('./random');\nvar MIN_INT = require('../number/MIN_INT');\nvar MAX_INT = require('../number/MAX_INT');\n\n    /**\n     * Returns random number inside range\n     */\n    function rand(min, max){\n        min = min == null? MIN_INT : min;\n        max = max == null? MAX_INT : max;\n        return min + (max - min) * random();\n    }\n\n    module.exports = rand;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/random/random.js":"\n\n    /**\n     * Just a wrapper to Math.random. No methods inside mout/random should call\n     * Math.random() directly so we can inject the pseudo-random number\n     * generator if needed (ie. in case we need a seeded random or a better\n     * algorithm than the native one)\n     */\n    function random(){\n        return random.get();\n    }\n\n    // we expose the method so it can be swapped if needed\n    random.get = Math.random;\n\n    module.exports = random;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/pluck.js":"var map = require('./map');\n\n    /**\n     * Extract a list of property values.\n     */\n    function pluck(arr, propName){\n        return map(arr, propName);\n    }\n\n    module.exports = pluck;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/range.js":"var countSteps = require('../math/countSteps');\n\n    /**\n     * Returns an Array of numbers inside range.\n     */\n    function range(start, stop, step) {\n        if (stop == null) {\n            stop = start;\n            start = 0;\n        }\n        step = step || 1;\n\n        var result = [],\n            nSteps = countSteps(stop - start, step),\n            i = start;\n\n        while (i <= stop) {\n            result.push(i);\n            i += step;\n        }\n\n        return result;\n    }\n\n    module.exports = range;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/math/countSteps.js":"\n    /**\n    * Count number of full steps.\n    */\n    function countSteps(val, step, overflow){\n        val = Math.floor(val / step);\n\n        if (overflow) {\n            return val % overflow;\n        }\n\n        return val;\n    }\n\n    module.exports = countSteps;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/reduce.js":"\n\n    /**\n     * Array reduce\n     */\n    function reduce(arr, fn, initVal) {\n        // check for args.length since initVal might be \"undefined\" see #gh-57\n        var hasInit = arguments.length > 2,\n            result = initVal;\n\n        if (arr == null || !arr.length) {\n            if (!hasInit) {\n                throw new Error('reduce of empty array with no initial value');\n            } else {\n                return initVal;\n            }\n        }\n\n        var i = -1, len = arr.length;\n        while (++i < len) {\n            if (!hasInit) {\n                result = arr[i];\n                hasInit = true;\n            } else {\n                result = fn(result, arr[i], i, arr);\n            }\n        }\n\n        return result;\n    }\n\n    module.exports = reduce;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/reduceRight.js":"\n\n    /**\n     * Array reduceRight\n     */\n    function reduceRight(arr, fn, initVal) {\n        // check for args.length since initVal might be \"undefined\" see #gh-57\n        var hasInit = arguments.length > 2;\n\n        if (arr == null || !arr.length) {\n            if (hasInit) {\n                return initVal;\n            } else {\n                throw new Error('reduce of empty array with no initial value');\n            }\n        }\n\n        var i = arr.length, result = initVal, value;\n        while (--i >= 0) {\n            // we iterate over sparse items since there is no way to make it\n            // work properly on IE 7-8. see #64\n            value = arr[i];\n            if (!hasInit) {\n                result = value;\n                hasInit = true;\n            } else {\n                result = fn(result, value, i, arr);\n            }\n        }\n        return result;\n    }\n\n    module.exports = reduceRight;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/reject.js":"var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Array reject\n     */\n    function reject(arr, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var results = [];\n        if (arr == null) {\n            return results;\n        }\n\n        var i = -1, len = arr.length, value;\n        while (++i < len) {\n            value = arr[i];\n            if (!callback(value, i, arr)) {\n                results.push(value);\n            }\n        }\n\n        return results;\n    }\n\n    module.exports = reject;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/remove.js":"var indexOf = require('./indexOf');\n\n    /**\n     * Remove a single item from the array.\n     * (it won't remove duplicates, just a single item)\n     */\n    function remove(arr, item){\n        var idx = indexOf(arr, item);\n        if (idx !== -1) arr.splice(idx, 1);\n    }\n\n    module.exports = remove;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/removeAll.js":"var indexOf = require('./indexOf');\n\n    /**\n     * Remove all instances of an item from array.\n     */\n    function removeAll(arr, item){\n        var idx = indexOf(arr, item);\n        while (idx !== -1) {\n            arr.splice(idx, 1);\n            idx = indexOf(arr, item, idx);\n        }\n    }\n\n    module.exports = removeAll;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/reverse.js":"\n\n    /**\n     * Returns a copy of the array in reversed order.\n     */\n    function reverse(array) {\n        var copy = array.slice();\n        copy.reverse();\n        return copy;\n    }\n\n    module.exports = reverse;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/shuffle.js":"var randInt = require('../random/randInt');\n\n    /**\n     * Shuffle array items.\n     */\n    function shuffle(arr) {\n        var results = [],\n            rnd;\n        if (arr == null) {\n            return results;\n        }\n\n        var i = -1, len = arr.length;\n        while (++i < len) {\n            if (!i) {\n                results[0] = arr[0];\n            } else {\n                rnd = randInt(0, i);\n                results[i] = results[rnd];\n                results[rnd] = arr[i];\n            }\n        }\n\n        return results;\n    }\n\n    module.exports = shuffle;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/sort.js":"\n\n    /**\n     * Merge sort (http://en.wikipedia.org/wiki/Merge_sort)\n     */\n    function mergeSort(arr, compareFn) {\n        if (arr == null) {\n            return [];\n        } else if (arr.length < 2) {\n            return arr;\n        }\n\n        if (compareFn == null) {\n            compareFn = defaultCompare;\n        }\n\n        var mid, left, right;\n\n        mid   = ~~(arr.length / 2);\n        left  = mergeSort( arr.slice(0, mid), compareFn );\n        right = mergeSort( arr.slice(mid, arr.length), compareFn );\n\n        return merge(left, right, compareFn);\n    }\n\n    function defaultCompare(a, b) {\n        return a < b ? -1 : (a > b? 1 : 0);\n    }\n\n    function merge(left, right, compareFn) {\n        var result = [];\n\n        while (left.length && right.length) {\n            if (compareFn(left[0], right[0]) <= 0) {\n                // if 0 it should preserve same order (stable)\n                result.push(left.shift());\n            } else {\n                result.push(right.shift());\n            }\n        }\n\n        if (left.length) {\n            result.push.apply(result, left);\n        }\n\n        if (right.length) {\n            result.push.apply(result, right);\n        }\n\n        return result;\n    }\n\n    module.exports = mergeSort;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/sortBy.js":"var sort = require('./sort');\nvar makeIterator = require('../function/makeIterator_');\n\n    /*\n     * Sort array by the result of the callback\n     */\n    function sortBy(arr, callback, context){\n        callback = makeIterator(callback, context);\n\n        return sort(arr, function(a, b) {\n            a = callback(a);\n            b = callback(b);\n            return (a < b) ? -1 : ((a > b) ? 1 : 0);\n        });\n    }\n\n    module.exports = sortBy;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/split.js":"\n\n    /**\n     * Split array into a fixed number of segments.\n     */\n    function split(array, segments) {\n        segments = segments || 2;\n        var results = [];\n        if (array == null) {\n            return results;\n        }\n\n        var minLength = Math.floor(array.length / segments),\n            remainder = array.length % segments,\n            i = 0,\n            len = array.length,\n            segmentIndex = 0,\n            segmentLength;\n\n        while (i < len) {\n            segmentLength = minLength;\n            if (segmentIndex < remainder) {\n                segmentLength++;\n            }\n\n            results.push(array.slice(i, i + segmentLength));\n\n            segmentIndex++;\n            i += segmentLength;\n        }\n\n        return results;\n    }\n    module.exports = split;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/take.js":"\n\n    /**\n     * Iterates over a callback a set amount of times\n     * returning the results\n     */\n    function take(n, callback, thisObj){\n        var i = -1;\n        var arr = [];\n        if( !thisObj ){\n            while(++i < n){\n                arr[i] = callback(i, n);\n            }\n        } else {\n            while(++i < n){\n                arr[i] = callback.call(thisObj, i, n);\n            }\n        }\n        return arr;\n    }\n\n    module.exports = take;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/toLookup.js":"var isFunction = require('../lang/isFunction');\n\n    /**\n     * Creates an object that holds a lookup for the objects in the array.\n     */\n    function toLookup(arr, key) {\n        var result = {};\n        if (arr == null) {\n            return result;\n        }\n\n        var i = -1, len = arr.length, value;\n        if (isFunction(key)) {\n            while (++i < len) {\n                value = arr[i];\n                result[key(value)] = value;\n            }\n        } else {\n            while (++i < len) {\n                value = arr[i];\n                result[value[key]] = value;\n            }\n        }\n\n        return result;\n    }\n    module.exports = toLookup;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isFunction.js":"var isKind = require('./isKind');\n    /**\n     */\n    function isFunction(val) {\n        return isKind(val, 'Function');\n    }\n    module.exports = isFunction;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/union.js":"var unique = require('./unique');\nvar append = require('./append');\n\n    /**\n     * Concat multiple arrays and remove duplicates\n     */\n    function union(arrs) {\n        var results = [];\n        var i = -1, len = arguments.length;\n        while (++i < len) {\n            append(results, arguments[i]);\n        }\n\n        return unique(results);\n    }\n\n    module.exports = union;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/xor.js":"var unique = require('./unique');\nvar filter = require('./filter');\nvar contains = require('./contains');\n\n\n    /**\n     * Exclusive OR. Returns items that are present in a single array.\n     * - like ptyhon's `symmetric_difference`\n     */\n    function xor(arr1, arr2) {\n        arr1 = unique(arr1);\n        arr2 = unique(arr2);\n\n        var a1 = filter(arr1, function(item){\n                return !contains(arr2, item);\n            }),\n            a2 = filter(arr2, function(item){\n                return !contains(arr1, item);\n            });\n\n        return a1.concat(a2);\n    }\n\n    module.exports = xor;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/array/zip.js":"var max = require('./max');\nvar map = require('./map');\n\n    function getLength(arr) {\n        return arr == null ? 0 : arr.length;\n    }\n\n    /**\n     * Merges together the values of each of the arrays with the values at the\n     * corresponding position.\n     */\n    function zip(arr){\n        var len = arr ? max(map(arguments, getLength)) : 0,\n            results = [],\n            i = -1;\n        while (++i < len) {\n            // jshint loopfunc: true\n            results.push(map(arguments, function(item) {\n                return item == null ? undefined : item[i];\n            }));\n        }\n\n        return results;\n    }\n\n    module.exports = zip;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/collection.js":"\n\n//automatically generated, do not edit!\n//run `node build` instead\nmodule.exports = {\n    'contains' : require('./collection/contains'),\n    'every' : require('./collection/every'),\n    'filter' : require('./collection/filter'),\n    'find' : require('./collection/find'),\n    'forEach' : require('./collection/forEach'),\n    'make_' : require('./collection/make_'),\n    'map' : require('./collection/map'),\n    'max' : require('./collection/max'),\n    'min' : require('./collection/min'),\n    'pluck' : require('./collection/pluck'),\n    'reduce' : require('./collection/reduce'),\n    'reject' : require('./collection/reject'),\n    'size' : require('./collection/size'),\n    'some' : require('./collection/some')\n};\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/collection/contains.js":"var make = require('./make_');\nvar arrContains = require('../array/contains');\nvar objContains = require('../object/contains');\n\n    /**\n     */\n    module.exports = make(arrContains, objContains);\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/collection/make_.js":"var slice = require('../array/slice');\n\n    /**\n     * internal method used to create other collection modules.\n     */\n    function makeCollectionMethod(arrMethod, objMethod, defaultReturn) {\n        return function(){\n            var args = slice(arguments);\n            if (args[0] == null) {\n                return defaultReturn;\n            }\n            // array-like is treated as array\n            return (typeof args[0].length === 'number')? arrMethod.apply(null, args) : objMethod.apply(null, args);\n        };\n    }\n\n    module.exports = makeCollectionMethod;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/contains.js":"var some = require('./some');\n\n    /**\n     * Check if object contains value\n     */\n    function contains(obj, needle) {\n        return some(obj, function(val) {\n            return (val === needle);\n        });\n    }\n    module.exports = contains;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/some.js":"var forOwn = require('./forOwn');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Object some\n     */\n    function some(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result = false;\n        forOwn(obj, function(val, key) {\n            if (callback(val, key, obj)) {\n                result = true;\n                return false; // break\n            }\n        });\n        return result;\n    }\n\n    module.exports = some;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/collection/every.js":"var make = require('./make_');\nvar arrEvery = require('../array/every');\nvar objEvery = require('../object/every');\n\n    /**\n     */\n    module.exports = make(arrEvery, objEvery);\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/every.js":"var forOwn = require('./forOwn');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Object every\n     */\n    function every(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result = true;\n        forOwn(obj, function(val, key) {\n            // we consider any falsy values as \"false\" on purpose so shorthand\n            // syntax can be used to check property existence\n            if (!callback(val, key, obj)) {\n                result = false;\n                return false; // break\n            }\n        });\n        return result;\n    }\n\n    module.exports = every;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/collection/filter.js":"var forEach = require('./forEach');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * filter collection values, returns array.\n     */\n    function filter(list, iterator, thisObj) {\n        iterator = makeIterator(iterator, thisObj);\n        var results = [];\n        if (!list) {\n            return results;\n        }\n        forEach(list, function(value, index, list) {\n            if (iterator(value, index, list)) {\n                results[results.length] = value;\n            }\n        });\n        return results;\n    }\n\n    module.exports = filter;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/collection/forEach.js":"var make = require('./make_');\nvar arrForEach = require('../array/forEach');\nvar objForEach = require('../object/forOwn');\n\n    /**\n     */\n    module.exports = make(arrForEach, objForEach);\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/collection/find.js":"var make = require('./make_');\nvar arrFind = require('../array/find');\nvar objFind = require('../object/find');\n\n    /**\n     * Find value that returns true on iterator check.\n     */\n    module.exports = make(arrFind, objFind);\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/find.js":"var some = require('./some');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Returns first item that matches criteria\n     */\n    function find(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result;\n        some(obj, function(value, key, obj) {\n            if (callback(value, key, obj)) {\n                result = value;\n                return true; //break\n            }\n        });\n        return result;\n    }\n\n    module.exports = find;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/collection/map.js":"var isObject = require('../lang/isObject');\nvar values = require('../object/values');\nvar arrMap = require('../array/map');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Map collection values, returns Array.\n     */\n    function map(list, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        // list.length to check array-like object, if not array-like\n        // we simply map all the object values\n        if( isObject(list) && list.length == null ){\n            list = values(list);\n        }\n        return arrMap(list, function (val, key, list) {\n            return callback(val, key, list);\n        });\n    }\n\n    module.exports = map;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isObject.js":"var isKind = require('./isKind');\n    /**\n     */\n    function isObject(val) {\n        return isKind(val, 'Object');\n    }\n    module.exports = isObject;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/values.js":"var forOwn = require('./forOwn');\n\n    /**\n     * Get object values\n     */\n    function values(obj) {\n        var vals = [];\n        forOwn(obj, function(val, key){\n            vals.push(val);\n        });\n        return vals;\n    }\n\n    module.exports = values;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/collection/max.js":"var make = require('./make_');\nvar arrMax = require('../array/max');\nvar objMax = require('../object/max');\n\n    /**\n     * Get maximum value inside collection\n     */\n    module.exports = make(arrMax, objMax);\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/max.js":"var arrMax = require('../array/max');\nvar values = require('./values');\n\n    /**\n     * Returns maximum value inside object.\n     */\n    function max(obj, compareFn) {\n        return arrMax(values(obj), compareFn);\n    }\n\n    module.exports = max;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/collection/min.js":"var make = require('./make_');\nvar arrMin = require('../array/min');\nvar objMin = require('../object/min');\n\n    /**\n     * Get minimum value inside collection.\n     */\n    module.exports = make(arrMin, objMin);\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/min.js":"var arrMin = require('../array/min');\nvar values = require('./values');\n\n    /**\n     * Returns minimum value inside object.\n     */\n    function min(obj, iterator) {\n        return arrMin(values(obj), iterator);\n    }\n\n    module.exports = min;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/collection/pluck.js":"var map = require('./map');\n\n    /**\n     * Extract a list of property values.\n     */\n    function pluck(list, key) {\n        return map(list, function(value) {\n            return value[key];\n        });\n    }\n\n    module.exports = pluck;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/collection/reduce.js":"var make = require('./make_');\nvar arrReduce = require('../array/reduce');\nvar objReduce = require('../object/reduce');\n\n    /**\n     */\n    module.exports = make(arrReduce, objReduce);\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/reduce.js":"var forOwn = require('./forOwn');\nvar size = require('./size');\n\n    /**\n     * Object reduce\n     */\n    function reduce(obj, callback, memo, thisObj) {\n        var initial = arguments.length > 2;\n\n        if (!size(obj) && !initial) {\n            throw new Error('reduce of empty object with no initial value');\n        }\n\n        forOwn(obj, function(value, key, list) {\n            if (!initial) {\n                memo = value;\n                initial = true;\n            }\n            else {\n                memo = callback.call(thisObj, memo, value, key, list);\n            }\n        });\n\n        return memo;\n    }\n\n    module.exports = reduce;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/size.js":"var forOwn = require('./forOwn');\n\n    /**\n     * Get object size\n     */\n    function size(obj) {\n        var count = 0;\n        forOwn(obj, function(){\n            count++;\n        });\n        return count;\n    }\n\n    module.exports = size;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/collection/reject.js":"var filter = require('./filter');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Inverse or collection/filter\n     */\n    function reject(list, iterator, thisObj) {\n        iterator = makeIterator(iterator, thisObj);\n        return filter(list, function(value, index, list) {\n            return !iterator(value, index, list);\n        }, thisObj);\n    }\n\n    module.exports = reject;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/collection/size.js":"var isArray = require('../lang/isArray');\nvar objSize = require('../object/size');\n\n    /**\n     * Get collection size\n     */\n    function size(list) {\n        if (!list) {\n            return 0;\n        }\n        if (isArray(list)) {\n            return list.length;\n        }\n        return objSize(list);\n    }\n\n    module.exports = size;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/collection/some.js":"var make = require('./make_');\nvar arrSome = require('../array/some');\nvar objSome = require('../object/some');\n\n    /**\n     */\n    module.exports = make(arrSome, objSome);\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date.js":"\n\n//automatically generated, do not edit!\n//run `node build` instead\nmodule.exports = {\n    'dayOfTheYear' : require('./date/dayOfTheYear'),\n    'diff' : require('./date/diff'),\n    'i18n_' : require('./date/i18n_'),\n    'isLeapYear' : require('./date/isLeapYear'),\n    'isSame' : require('./date/isSame'),\n    'parseIso' : require('./date/parseIso'),\n    'quarter' : require('./date/quarter'),\n    'startOf' : require('./date/startOf'),\n    'strftime' : require('./date/strftime'),\n    'timezoneAbbr' : require('./date/timezoneAbbr'),\n    'timezoneOffset' : require('./date/timezoneOffset'),\n    'totalDaysInMonth' : require('./date/totalDaysInMonth'),\n    'totalDaysInYear' : require('./date/totalDaysInYear'),\n    'weekOfTheYear' : require('./date/weekOfTheYear')\n};\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date/dayOfTheYear.js":"var isDate = require('../lang/isDate');\n\n    /**\n     * return the day of the year (1..366)\n     */\n    function dayOfTheYear(date){\n        return (Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()) -\n                Date.UTC(date.getFullYear(), 0, 1)) / 86400000 + 1;\n    }\n\n    module.exports = dayOfTheYear;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isDate.js":"var isKind = require('./isKind');\n    /**\n     */\n    function isDate(val) {\n        return isKind(val, 'Date');\n    }\n    module.exports = isDate;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date/diff.js":"var totalDaysInMonth = require('./totalDaysInMonth');\nvar totalDaysInYear = require('./totalDaysInYear');\nvar convert = require('../time/convert');\n\n    /**\n     * calculate the difference between dates (range)\n     */\n    function diff(start, end, unitName){\n        // sort the dates to make it easier to process (specially year/month)\n        if (start > end) {\n            var swap = start;\n            start = end;\n            end = swap;\n        }\n\n        var output;\n\n        if (unitName === 'month') {\n            output = getMonthsDiff(start, end);\n        } else if (unitName === 'year'){\n            output = getYearsDiff(start, end);\n        } else if (unitName != null) {\n            if (unitName === 'day') {\n                // ignore timezone difference because of daylight savings time\n                start = toUtc(start);\n                end = toUtc(end);\n            }\n            output = convert(end - start, 'ms', unitName);\n        } else {\n            output = end - start;\n        }\n\n        return output;\n    }\n\n\n    function toUtc(d){\n        // we ignore timezone differences on purpose because of daylight\n        // savings time, otherwise it would return fractional days/weeks even\n        // if a full day elapsed. eg:\n        // Wed Feb 12 2014 00:00:00 GMT-0200 (BRST)\n        // Sun Feb 16 2014 00:00:00 GMT-0300 (BRT)\n        // diff should be 4 days and not 4.041666666666667\n        return Date.UTC(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate(),\n                        d.getHours(), d.getMinutes(), d.getSeconds(),\n                        d.getMilliseconds());\n    }\n\n\n    function getMonthsDiff(start, end){\n        return getElapsedMonths(start, end) +\n               getElapsedYears(start, end) * 12 +\n               getFractionalMonth(start, end);\n    }\n\n\n    function getYearsDiff(start, end){\n        var elapsedYears = getElapsedYears(start, end);\n        return elapsedYears + getFractionalYear(start, end, elapsedYears);\n    }\n\n\n    function getElapsedMonths(start, end){\n        var monthDiff = end.getMonth() - start.getMonth();\n        if (monthDiff < 0) {\n            monthDiff += 12;\n        }\n        // less than a full month\n        if (start.getDate() > end.getDate()) {\n            monthDiff -= 1;\n        }\n        return monthDiff;\n    }\n\n\n    function getElapsedYears(start, end){\n        var yearDiff = end.getFullYear() - start.getFullYear();\n        // less than a full year\n        if (start.getMonth() > end.getMonth()) {\n            yearDiff -= 1;\n        }\n        return yearDiff;\n    }\n\n\n    function getFractionalMonth(start, end){\n        var fractionalDiff = 0;\n        var startDay = start.getDate();\n        var endDay = end.getDate();\n\n        if (startDay !== endDay) {\n            var startTotalDays = totalDaysInMonth(start);\n            var endTotalDays = totalDaysInMonth(end);\n            var totalDays;\n            var daysElapsed;\n\n            if (startDay > endDay) {\n                // eg: Jan 29 - Feb 27 (29 days elapsed but not a full month)\n                var baseDay = startTotalDays - startDay;\n                daysElapsed = endDay + baseDay;\n                // total days should be relative to 1st day of next month if\n                // startDay > endTotalDays\n                totalDays = (startDay > endTotalDays)?\n                    endTotalDays + baseDay + 1 : startDay + baseDay;\n            } else {\n                // fractional is only based on endMonth eg: Jan 12 - Feb 18\n                // (6 fractional days, 28 days until next full month)\n                daysElapsed = endDay - startDay;\n                totalDays = endTotalDays;\n            }\n\n            fractionalDiff = daysElapsed / totalDays;\n        }\n\n        return fractionalDiff;\n    }\n\n\n    function getFractionalYear(start, end, elapsedYears){\n        var base = elapsedYears?\n            new Date(end.getFullYear(), start.getMonth(), start.getDate()) :\n            start;\n        var elapsedDays = diff(base, end, 'day');\n        return elapsedDays / totalDaysInYear(end);\n    }\n\n\n    module.exports = diff;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date/totalDaysInMonth.js":"var isDate = require('../lang/isDate');\nvar isLeapYear = require('./isLeapYear');\n\n    var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    /**\n     * returns the total amount of days in the month (considering leap years)\n     */\n    function totalDaysInMonth(fullYear, monthIndex){\n        if (isDate(fullYear)) {\n            monthIndex = fullYear.getMonth();\n        }\n\n        if (monthIndex === 1 && isLeapYear(fullYear)) {\n            return 29;\n        } else {\n            return DAYS_IN_MONTH[monthIndex];\n        }\n    }\n\n    module.exports = totalDaysInMonth;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date/isLeapYear.js":"var isDate = require('../lang/isDate');\n\n    /**\n     * checks if it's a leap year\n     */\n    function isLeapYear(fullYear){\n        if (isDate(fullYear)) {\n            fullYear = fullYear.getFullYear();\n        }\n        return fullYear % 400 === 0 || (fullYear % 100 !== 0 && fullYear % 4 === 0);\n    }\n\n    module.exports = isLeapYear;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date/totalDaysInYear.js":"var isLeapYear = require('./isLeapYear');\n\n    /**\n     * return the amount of days in the year following the gregorian calendar\n     * and leap years\n     */\n    function totalDaysInYear(fullYear){\n        return isLeapYear(fullYear)? 366 : 365;\n    }\n\n    module.exports = totalDaysInYear;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/time/convert.js":"\n\n    /**\n     * convert time into another unit\n     */\n    function convert(val, sourceUnitName, destinationUnitName){\n        destinationUnitName = destinationUnitName || 'ms';\n        return (val * getUnit(sourceUnitName)) / getUnit(destinationUnitName);\n    }\n\n\n    //TODO: maybe extract to a separate module\n    function getUnit(unitName){\n        switch(unitName){\n            case 'ms':\n            case 'millisecond':\n                return 1;\n            case 's':\n            case 'second':\n                 return 1000;\n            case 'm':\n            case 'minute':\n                 return 60000;\n            case 'h':\n            case 'hour':\n                 return 3600000;\n            case 'd':\n            case 'day':\n                 return 86400000;\n            case 'w':\n            case 'week':\n                 return 604800000;\n            default:\n                throw new Error('\"'+ unitName + '\" is not a valid unit');\n        }\n    }\n\n\n    module.exports = convert;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date/i18n_.js":"var mixIn = require('../object/mixIn');\nvar enUS = require('./i18n/en-US');\n\n    // we also use mixIn to make sure we don't affect the original locale\n    var activeLocale = mixIn({}, enUS, {\n        // we expose a \"set\" method to allow overriding the global locale\n        set : function(localeData){\n            mixIn(activeLocale, localeData);\n        }\n    });\n\n    module.exports = activeLocale;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/mixIn.js":"var forOwn = require('./forOwn');\n\n    /**\n    * Combine properties from all the objects into first one.\n    * - This method affects target object in place, if you want to create a new Object pass an empty object as first param.\n    * @param {object} target    Target Object\n    * @param {...object} objects    Objects to be combined (0...n objects).\n    * @return {object} Target Object.\n    */\n    function mixIn(target, objects){\n        var i = 0,\n            n = arguments.length,\n            obj;\n        while(++i < n){\n            obj = arguments[i];\n            if (obj != null) {\n                forOwn(obj, copyProp, target);\n            }\n        }\n        return target;\n    }\n\n    function copyProp(val, key){\n        this[key] = val;\n    }\n\n    module.exports = mixIn;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date/i18n/en-US.js":"\n    // en-US (English, United States)\n    module.exports = {\n        \"am\" : \"AM\",\n        \"pm\" : \"PM\",\n\n        \"x\": \"%m/%d/%y\",\n        \"X\": \"%H:%M:%S\",\n        \"c\": \"%a %d %b %Y %I:%M:%S %p %Z\",\n\n        \"months\" : [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\"\n        ],\n\n        \"months_abbr\" : [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\"\n        ],\n\n        \"days\" : [\n            \"Sunday\",\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n            \"Saturday\"\n        ],\n\n        \"days_abbr\" : [\n            \"Sun\",\n            \"Mon\",\n            \"Tue\",\n            \"Wed\",\n            \"Thu\",\n            \"Fri\",\n            \"Sat\"\n        ]\n    };\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date/isSame.js":"var startOf = require('./startOf');\n\n    /**\n     * Check if date is \"same\" with optional period\n     */\n    function isSame(date1, date2, period){\n        if (period) {\n            date1 = startOf(date1, period);\n            date2 = startOf(date2, period);\n        }\n        return Number(date1) === Number(date2);\n    }\n\n    module.exports = isSame;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date/startOf.js":"var clone = require('../lang/clone');\n\n    /**\n     * get a new Date object representing start of period\n     */\n    function startOf(date, period){\n        date = clone(date);\n\n        // intentionally removed \"break\" from switch since start of\n        // month/year/etc should also reset the following periods\n        switch (period) {\n            case 'year':\n                date.setMonth(0);\n            /* falls through */\n            case 'month':\n                date.setDate(1);\n            /* falls through */\n            case 'week':\n            case 'day':\n                date.setHours(0);\n            /* falls through */\n            case 'hour':\n                date.setMinutes(0);\n            /* falls through */\n            case 'minute':\n                date.setSeconds(0);\n            /* falls through */\n            case 'second':\n                date.setMilliseconds(0);\n                break;\n            default:\n                throw new Error('\"'+ period +'\" is not a valid period');\n        }\n\n        // week is the only case that should reset the weekDay and maybe even\n        // overflow to previous month\n        if (period === 'week') {\n            var weekDay = date.getDay();\n            var baseDate = date.getDate();\n            if (weekDay) {\n                if (weekDay >= baseDate) {\n                    //start of the week is on previous month\n                    date.setDate(0);\n                }\n                date.setDate(date.getDate() - date.getDay());\n            }\n        }\n\n        return date;\n    }\n\n    module.exports = startOf;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/clone.js":"var kindOf = require('./kindOf');\nvar isPlainObject = require('./isPlainObject');\nvar mixIn = require('../object/mixIn');\n\n    /**\n     * Clone native types.\n     */\n    function clone(val){\n        switch (kindOf(val)) {\n            case 'Object':\n                return cloneObject(val);\n            case 'Array':\n                return cloneArray(val);\n            case 'RegExp':\n                return cloneRegExp(val);\n            case 'Date':\n                return cloneDate(val);\n            default:\n                return val;\n        }\n    }\n\n    function cloneObject(source) {\n        if (isPlainObject(source)) {\n            return mixIn({}, source);\n        } else {\n            return source;\n        }\n    }\n\n    function cloneRegExp(r) {\n        var flags = '';\n        flags += r.multiline ? 'm' : '';\n        flags += r.global ? 'g' : '';\n        flags += r.ignoreCase ? 'i' : '';\n        return new RegExp(r.source, flags);\n    }\n\n    function cloneDate(date) {\n        return new Date(+date);\n    }\n\n    function cloneArray(arr) {\n        return arr.slice();\n    }\n\n    module.exports = clone;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isPlainObject.js":"\n\n    /**\n     * Checks if the value is created by the `Object` constructor.\n     */\n    function isPlainObject(value) {\n        return (!!value && typeof value === 'object' &&\n            value.constructor === Object);\n    }\n\n    module.exports = isPlainObject;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date/parseIso.js":"var some = require('../array/some');\n\n    var datePatterns = [\n        /^([0-9]{4})$/,                        // YYYY\n        /^([0-9]{4})-([0-9]{2})$/,             // YYYY-MM (YYYYMM not allowed)\n        /^([0-9]{4})-?([0-9]{2})-?([0-9]{2})$/ // YYYY-MM-DD or YYYYMMDD\n    ];\n    var ORD_DATE = /^([0-9]{4})-?([0-9]{3})$/; // YYYY-DDD\n\n    var timePatterns = [\n        /^([0-9]{2}(?:\\.[0-9]*)?)$/,                      // HH.hh\n        /^([0-9]{2}):?([0-9]{2}(?:\\.[0-9]*)?)$/,          // HH:MM.mm\n        /^([0-9]{2}):?([0-9]{2}):?([0-9]{2}(\\.[0-9]*)?)$/ // HH:MM:SS.ss\n    ];\n\n    var DATE_TIME = /^(.+)T(.+)$/;\n    var TIME_ZONE = /^(.+)([+\\-])([0-9]{2}):?([0-9]{2})$/;\n\n    function matchAll(str, patterns) {\n        var match;\n        var found = some(patterns, function(pattern) {\n            return !!(match = pattern.exec(str));\n        });\n\n        return found ? match : null;\n    }\n\n    function getDate(year, month, day) {\n        var date = new Date(Date.UTC(year, month, day));\n\n        // Explicitly set year to avoid Date.UTC making dates < 100 relative to\n        // 1900\n        date.setUTCFullYear(year);\n\n        var valid =\n            date.getUTCFullYear() === year &&\n            date.getUTCMonth() === month &&\n            date.getUTCDate() === day;\n        return valid ? +date : NaN;\n    }\n\n    function parseOrdinalDate(str) {\n        var match = ORD_DATE.exec(str);\n        if (match ) {\n            var year = +match[1],\n                day = +match[2],\n                date = new Date(Date.UTC(year, 0, day));\n\n            if (date.getUTCFullYear() === year) {\n                return +date;\n            }\n        }\n\n        return NaN;\n    }\n\n    function parseDate(str) {\n        var match, year, month, day;\n\n        match = matchAll(str, datePatterns);\n        if (match === null) {\n            // Ordinal dates are verified differently.\n            return parseOrdinalDate(str);\n        }\n\n        year = (match[1] === void 0) ? 0 : +match[1];\n        month = (match[2] === void 0) ? 0 : +match[2] - 1;\n        day = (match[3] === void 0) ? 1 : +match[3];\n\n        return getDate(year, month, day);\n    }\n\n    function getTime(hr, min, sec) {\n        var valid =\n            (hr < 24 && hr >= 0 &&\n             min < 60 && min >= 0 &&\n             sec < 60 && min >= 0) ||\n            (hr === 24 && min === 0 && sec === 0);\n        if (!valid) {\n            return NaN;\n        }\n\n        return ((hr * 60 + min) * 60 + sec) * 1000;\n    }\n\n    function parseOffset(str) {\n        var match;\n        if (str.charAt(str.length - 1) === 'Z') {\n            str = str.substring(0, str.length - 1);\n        } else {\n            match = TIME_ZONE.exec(str);\n            if (match) {\n                var hours = +match[3],\n                    minutes = (match[4] === void 0) ? 0 : +match[4],\n                    offset = getTime(hours, minutes, 0);\n\n                if (match[2] === '-') {\n                    offset *= -1;\n                }\n\n                return { offset: offset, time: match[1] };\n            }\n        }\n\n        // No time zone specified, assume UTC\n        return { offset: 0, time: str };\n    }\n\n    function parseTime(str) {\n        var match;\n        var offset = parseOffset(str);\n\n        str = offset.time;\n        offset = offset.offset;\n        if (isNaN(offset)) {\n            return NaN;\n        }\n\n        match = matchAll(str, timePatterns);\n        if (match === null) {\n            return NaN;\n        }\n\n        var hours = (match[1] === void 0) ? 0 : +match[1],\n            minutes = (match[2] === void 0) ? 0 : +match[2],\n            seconds = (match[3] === void 0) ? 0 : +match[3];\n\n        return getTime(hours, minutes, seconds) - offset;\n    }\n\n    /**\n     * Parse an ISO8601 formatted date string, and return a Date object.\n     */\n    function parseISO8601(str){\n        var match = DATE_TIME.exec(str);\n        if (!match) {\n            // No time specified\n            return parseDate(str);\n        }\n\n        return parseDate(match[1]) + parseTime(match[2]);\n    }\n\n    module.exports = parseISO8601;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date/quarter.js":"\n\n    /**\n     * gets date quarter\n     */\n    function quarter(date){\n        var month = date.getMonth();\n        if (month < 3) return 1;\n        if (month < 6) return 2;\n        if (month < 9) return 3;\n        return 4;\n    }\n\n    module.exports = quarter;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date/strftime.js":"var pad = require('../number/pad');\nvar lpad = require('../string/lpad');\nvar i18n = require('./i18n_');\nvar dayOfTheYear = require('./dayOfTheYear');\nvar timezoneOffset = require('./timezoneOffset');\nvar timezoneAbbr = require('./timezoneAbbr');\nvar weekOfTheYear = require('./weekOfTheYear');\n\n    var _combinations = {\n        'D': '%m/%d/%y',\n        'F': '%Y-%m-%d',\n        'r': '%I:%M:%S %p',\n        'R': '%H:%M',\n        'T': '%H:%M:%S',\n        'x': 'locale',\n        'X': 'locale',\n        'c': 'locale'\n    };\n\n\n    /**\n     * format date based on strftime format\n     */\n    function strftime(date, format, localeData){\n        localeData = localeData  || i18n;\n        var reToken = /%([a-z%])/gi;\n\n        function makeIterator(fn) {\n            return function(match, token){\n                return fn(date, token, localeData);\n            };\n        }\n\n        return format\n            .replace(reToken, makeIterator(expandCombinations))\n            .replace(reToken, makeIterator(convertToken));\n    }\n\n\n    function expandCombinations(date, token, l10n){\n        if (token in _combinations) {\n            var expanded = _combinations[token];\n            return expanded === 'locale'? l10n[token] : expanded;\n        } else {\n            return '%'+ token;\n        }\n    }\n\n\n    function convertToken(date, token, l10n){\n        switch (token){\n            case 'a':\n                return l10n.days_abbr[date.getDay()];\n            case 'A':\n                return l10n.days[date.getDay()];\n            case 'h':\n            case 'b':\n                return l10n.months_abbr[date.getMonth()];\n            case 'B':\n                return l10n.months[date.getMonth()];\n            case 'C':\n                return pad(Math.floor(date.getFullYear() / 100), 2);\n            case 'd':\n                return pad(date.getDate(), 2);\n            case 'e':\n                return pad(date.getDate(), 2, ' ');\n            case 'H':\n                return pad(date.getHours(), 2);\n            case 'I':\n                return pad(date.getHours() % 12, 2);\n            case 'j':\n                return pad(dayOfTheYear(date), 3);\n            case 'l':\n                return lpad(date.getHours() % 12, 2);\n            case 'L':\n                return pad(date.getMilliseconds(), 3);\n            case 'm':\n                return pad(date.getMonth() + 1, 2);\n            case 'M':\n                return pad(date.getMinutes(), 2);\n            case 'n':\n                return '\\n';\n            case 'p':\n                return date.getHours() >= 12? l10n.pm : l10n.am;\n            case 'P':\n                return convertToken(date, 'p', l10n).toLowerCase();\n            case 's':\n                return date.getTime() / 1000;\n            case 'S':\n                return pad(date.getSeconds(), 2);\n            case 't':\n                return '\\t';\n            case 'u':\n                var day = date.getDay();\n                return day === 0? 7 : day;\n            case 'U':\n                return pad(weekOfTheYear(date), 2);\n            case 'w':\n                return date.getDay();\n            case 'W':\n                return pad(weekOfTheYear(date, 1), 2);\n            case 'y':\n                return pad(date.getFullYear() % 100, 2);\n            case 'Y':\n                return pad(date.getFullYear(), 4);\n            case 'z':\n                return timezoneOffset(date);\n            case 'Z':\n                return timezoneAbbr(date);\n            case '%':\n                return '%';\n            default:\n                // keep unrecognized tokens\n                return '%'+ token;\n        }\n    }\n\n\n    module.exports = strftime;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number/pad.js":"var lpad = require('../string/lpad');\nvar toNumber = require('../lang/toNumber');\n\n    /**\n     * Add padding zeros if n.length < minLength.\n     */\n    function pad(n, minLength, char){\n        n = toNumber(n);\n        return lpad(''+ n, minLength, char || '0');\n    }\n\n    module.exports = pad;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/lpad.js":"var toString = require('../lang/toString');\nvar repeat = require('./repeat');\n\n    /**\n     * Pad string with `char` if its' length is smaller than `minLen`\n     */\n    function lpad(str, minLen, ch) {\n        str = toString(str);\n        ch = ch || ' ';\n\n        return (str.length < minLen) ?\n            repeat(ch, minLen - str.length) + str : str;\n    }\n\n    module.exports = lpad;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/toString.js":"\n\n    /**\n     * Typecast a value to a String, using an empty string value for null or\n     * undefined.\n     */\n    function toString(val){\n        return val == null ? '' : val.toString();\n    }\n\n    module.exports = toString;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/repeat.js":"var toString = require('../lang/toString');\nvar toInt = require('../number/toInt');\n\n    /**\n     * Repeat string n times\n     */\n     function repeat(str, n){\n         var result = '';\n         str = toString(str);\n         n = toInt(n);\n        if (n < 1) {\n            return '';\n        }\n        while (n > 0) {\n            if (n % 2) {\n                result += str;\n            }\n            n = Math.floor(n / 2);\n            str += str;\n        }\n        return result;\n     }\n\n     module.exports = repeat;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number/toInt.js":"\n\n    /**\n     * \"Convert\" value into an 32-bit integer.\n     * Works like `Math.floor` if val > 0 and `Math.ceil` if val < 0.\n     * IMPORTANT: val will wrap at 2^31 and -2^31.\n     * Perf tests: http://jsperf.com/vs-vs-parseint-bitwise-operators/7\n     */\n    function toInt(val){\n        // we do not use lang/toNumber because of perf and also because it\n        // doesn't break the functionality\n        return ~~val;\n    }\n\n    module.exports = toInt;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/toNumber.js":"var isArray = require('./isArray');\n\n    /**\n     * covert value into number if numeric\n     */\n    function toNumber(val){\n        // numberic values should come first because of -0\n        if (typeof val === 'number') return val;\n        // we want all falsy values (besides -0) to return zero to avoid\n        // headaches\n        if (!val) return 0;\n        if (typeof val === 'string') return parseFloat(val);\n        // arrays are edge cases. `Number([4]) === 4`\n        if (isArray(val)) return NaN;\n        return Number(val);\n    }\n\n    module.exports = toNumber;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date/timezoneOffset.js":"var pad = require('../number/pad');\n\n    /**\n     * time zone as hour and minute offset from UTC (e.g. +0900)\n     */\n    function timezoneOffset(date){\n        var offset = date.getTimezoneOffset();\n        var abs = Math.abs(offset);\n        var h = pad(Math.floor(abs / 60), 2);\n        var m = pad(abs % 60, 2);\n        return (offset > 0? '-' : '+') + h + m;\n    }\n\n    module.exports = timezoneOffset;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date/timezoneAbbr.js":"var timezoneOffset = require('./timezoneOffset');\n\n    /**\n     * Abbreviated time zone name or similar information.\n     */\n    function timezoneAbbr(date){\n        // Date.toString gives different results depending on the\n        // browser/system so we fallback to timezone offset\n        // chrome: 'Mon Apr 08 2013 09:02:04 GMT-0300 (BRT)'\n        // IE: 'Mon Apr 8 09:02:04 UTC-0300 2013'\n        var tz = /\\(([A-Z]{3,4})\\)/.exec(date.toString());\n        return tz? tz[1] : timezoneOffset(date);\n    }\n\n    module.exports = timezoneAbbr;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date/weekOfTheYear.js":"var dayOfTheYear = require('./dayOfTheYear');\n\n    /**\n     * Return the week of the year based on given firstDayOfWeek\n     */\n    function weekOfTheYear(date, firstDayOfWeek){\n        firstDayOfWeek = firstDayOfWeek == null? 0 : firstDayOfWeek;\n        var doy = dayOfTheYear(date);\n        var dow = (7 + date.getDay() - firstDayOfWeek) % 7;\n        var relativeWeekDay = 6 - firstDayOfWeek - dow;\n        return Math.floor((doy + relativeWeekDay) / 7);\n    }\n\n    module.exports = weekOfTheYear;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function.js":"\n\n//automatically generated, do not edit!\n//run `node build` instead\nmodule.exports = {\n    'after' : require('./function/after'),\n    'awaitDelay' : require('./function/awaitDelay'),\n    'bind' : require('./function/bind'),\n    'compose' : require('./function/compose'),\n    'constant' : require('./function/constant'),\n    'debounce' : require('./function/debounce'),\n    'func' : require('./function/func'),\n    'identity' : require('./function/identity'),\n    'makeIterator_' : require('./function/makeIterator_'),\n    'memoize' : require('./function/memoize'),\n    'partial' : require('./function/partial'),\n    'prop' : require('./function/prop'),\n    'series' : require('./function/series'),\n    'throttle' : require('./function/throttle'),\n    'timeout' : require('./function/timeout'),\n    'times' : require('./function/times'),\n    'wrap' : require('./function/wrap')\n};\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function/after.js":"\n\n    /**\n     * Calls closure only after callback is called x times\n     */\n    function after(closure, times){\n        return function () {\n            if (--times <= 0) closure();\n        };\n    }\n\n    module.exports = after;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function/awaitDelay.js":"var now = require('../time/now');\nvar timeout = require('./timeout');\nvar append = require('../array/append');\n\n    /**\n     * Ensure a minimum delay for callbacks\n     */\n    function awaitDelay( callback, delay ){\n        var baseTime = now() + delay;\n        return function() {\n            // ensure all browsers will execute it asynchronously (avoid hard\n            // to catch errors) not using \"0\" because of old browsers and also\n            // since new browsers increase the value to be at least \"4\"\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout\n            var ms = Math.max(baseTime - now(), 4);\n            return timeout.apply(this, append([callback, ms, this], arguments));\n        };\n    }\n\n    module.exports = awaitDelay;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/time/now.js":"\n\n    /**\n     * Get current time in miliseconds\n     */\n    function now(){\n        // yes, we defer the work to another function to allow mocking it\n        // during the tests\n        return now.get();\n    }\n\n    now.get = (typeof Date.now === 'function')? Date.now : function(){\n        return +(new Date());\n    };\n\n    module.exports = now;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function/timeout.js":"var slice = require('../array/slice');\n\n    /**\n     * Delays the call of a function within a given context.\n     */\n    function timeout(fn, millis, context){\n\n        var args = slice(arguments, 3);\n\n        return setTimeout(function() {\n            fn.apply(context, args);\n        }, millis);\n    }\n\n    module.exports = timeout;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function/bind.js":"var slice = require('../array/slice');\n\n    /**\n     * Return a function that will execute in the given context, optionally adding any additional supplied parameters to the beginning of the arguments collection.\n     * @param {Function} fn  Function.\n     * @param {object} context   Execution context.\n     * @param {rest} args    Arguments (0...n arguments).\n     * @return {Function} Wrapped Function.\n     */\n    function bind(fn, context, args){\n        var argsArr = slice(arguments, 2); //curried args\n        return function(){\n            return fn.apply(context, argsArr.concat(slice(arguments)));\n        };\n    }\n\n    module.exports = bind;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function/compose.js":"\n\n    /**\n     * Returns a function that composes multiple functions, passing results to\n     * each other.\n     */\n    function compose() {\n        var fns = arguments;\n        return function(arg){\n            // only cares about the first argument since the chain can only\n            // deal with a single return value anyway. It should start from\n            // the last fn.\n            var n = fns.length;\n            while (n--) {\n                arg = fns[n].call(this, arg);\n            }\n            return arg;\n         };\n     }\n\n     module.exports = compose;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function/constant.js":"\n\n    /**\n     * Returns a new function that will return the value\n     */\n    function constant(value){\n        return function() {\n            return value;\n        };\n    }\n\n    module.exports = constant;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function/debounce.js":"\n\n    /**\n     * Debounce callback execution\n     */\n    function debounce(fn, threshold, isAsap){\n        var timeout, result;\n        function debounced(){\n            var args = arguments, context = this;\n            function delayed(){\n                if (! isAsap) {\n                    result = fn.apply(context, args);\n                }\n                timeout = null;\n            }\n            if (timeout) {\n                clearTimeout(timeout);\n            } else if (isAsap) {\n                result = fn.apply(context, args);\n            }\n            timeout = setTimeout(delayed, threshold);\n            return result;\n        }\n        debounced.cancel = function(){\n            clearTimeout(timeout);\n        };\n        return debounced;\n    }\n\n    module.exports = debounce;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function/func.js":"\n\n    /**\n     * Returns a function that call a method on the passed object\n     */\n    function func(name){\n        return function(obj){\n            return obj[name]();\n        };\n    }\n\n    module.exports = func;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function/memoize.js":"var isFunction = require('../lang/isFunction');\nvar hasOwn = require('../object/hasOwn');\n\n    /**\n     * Creates a function that memoizes the result of `fn`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `fn` is invoked with the `this` binding of the memoized\n     * function. Modified from lodash.\n     *\n     * @param {Function} fn Function to have its output memoized.\n     * @param {Function} context Function to resolve the cache key.\n     * @return {Function} Returns the new memoized function.\n     */\n    function memoize(fn, resolver) {\n        if (!isFunction(fn) || (resolver && !isFunction(resolver))) {\n            throw new TypeError('Expected a function');\n        }\n\n        var memoized = function() {\n            var cache = memoized.cache,\n                key = resolver ? resolver.apply(this, arguments) : arguments[0];\n\n            if (hasOwn(cache, key)) {\n                return cache[key];\n            }\n            var result = fn.apply(this, arguments);\n            cache[key] = result;\n            return result;\n        };\n\n        memoized.cache = {};\n\n        return memoized;\n    }\n\n    module.exports = memoize;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function/partial.js":"var indexOf = require('../array/indexOf');\nvar slice = require('../array/slice');\nvar take = require('../array/take');\n\n    var _ = {};\n\n    /**\n     * Creates a partially applied function.\n     */\n    function partial(f) {\n        var as = slice(arguments, 1);\n        var has_ = indexOf(as, _) !== -1;\n\n        return function() {\n            var rest = slice(arguments);\n\n            // Don't waste time checking for placeholders if there aren't any.\n            var args = has_ ? take(as.length, function(i) {\n                var a = as[i];\n                return a === _ ? rest.shift() : a;\n            }) : as;\n\n            return f.apply(this, rest.length ? args.concat(rest) : args);\n        };\n    }\n\n    partial._ = _;\n\n    module.exports = partial;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function/series.js":"\n\n    /**\n     * Returns a function that will execute a list of functions in sequence\n     * passing the same arguments to each one. (useful for batch processing\n     * items during a forEach loop)\n     */\n    function series(){\n        var fns = arguments;\n        return function(){\n            var i = 0,\n                n = fns.length;\n            while (i < n) {\n                fns[i].apply(this, arguments);\n                i += 1;\n            }\n        };\n    }\n\n    module.exports = series;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function/throttle.js":"var now = require('../time/now');\n\n    /**\n     */\n    function throttle(fn, delay){\n        var context, timeout, result, args,\n            diff, prevCall = 0;\n        function delayed(){\n            prevCall = now();\n            timeout = null;\n            result = fn.apply(context, args);\n        }\n        function throttled(){\n            context = this;\n            args = arguments;\n            diff = delay - (now() - prevCall);\n            if (diff <= 0) {\n                clearTimeout(timeout);\n                delayed();\n            } else if (! timeout) {\n                timeout = setTimeout(delayed, diff);\n            }\n            return result;\n        }\n        throttled.cancel = function(){\n            clearTimeout(timeout);\n        };\n        return throttled;\n    }\n\n    module.exports = throttle;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function/times.js":"\n\n    /**\n     * Iterates over a callback a set amount of times\n     */\n    function times(n, callback, thisObj){\n        var i = -1;\n        while (++i < n) {\n            if ( callback.call(thisObj, i) === false ) {\n                break;\n            }\n        }\n    }\n\n    module.exports = times;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/function/wrap.js":"var partial = require('./partial');\n\n    /**\n     * Returns the first function passed as an argument to the second,\n     * allowing you to adjust arguments, run code before and after, and\n     * conditionally execute the original function.\n     */\n    function wrap(fn, wrapper){\n        return partial(wrapper, fn);\n    }\n\n    module.exports = wrap;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang.js":"\n\n//automatically generated, do not edit!\n//run `node build` instead\nmodule.exports = {\n    'GLOBAL' : require('./lang/GLOBAL'),\n    'clone' : require('./lang/clone'),\n    'createObject' : require('./lang/createObject'),\n    'ctorApply' : require('./lang/ctorApply'),\n    'deepClone' : require('./lang/deepClone'),\n    'deepEquals' : require('./lang/deepEquals'),\n    'defaults' : require('./lang/defaults'),\n    'inheritPrototype' : require('./lang/inheritPrototype'),\n    'is' : require('./lang/is'),\n    'isArguments' : require('./lang/isArguments'),\n    'isArray' : require('./lang/isArray'),\n    'isBoolean' : require('./lang/isBoolean'),\n    'isDate' : require('./lang/isDate'),\n    'isEmpty' : require('./lang/isEmpty'),\n    'isFinite' : require('./lang/isFinite'),\n    'isFunction' : require('./lang/isFunction'),\n    'isInteger' : require('./lang/isInteger'),\n    'isKind' : require('./lang/isKind'),\n    'isNaN' : require('./lang/isNaN'),\n    'isNull' : require('./lang/isNull'),\n    'isNumber' : require('./lang/isNumber'),\n    'isObject' : require('./lang/isObject'),\n    'isPlainObject' : require('./lang/isPlainObject'),\n    'isPrimitive' : require('./lang/isPrimitive'),\n    'isRegExp' : require('./lang/isRegExp'),\n    'isString' : require('./lang/isString'),\n    'isUndefined' : require('./lang/isUndefined'),\n    'isnt' : require('./lang/isnt'),\n    'kindOf' : require('./lang/kindOf'),\n    'toArray' : require('./lang/toArray'),\n    'toNumber' : require('./lang/toNumber'),\n    'toString' : require('./lang/toString')\n};\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/GLOBAL.js":"\n\n    // Reference to the global context (works on ES3 and ES5-strict mode)\n    //jshint -W061, -W064\n    module.exports = Function('return this')();\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/createObject.js":"var mixIn = require('../object/mixIn');\n\n    /**\n     * Create Object using prototypal inheritance and setting custom properties.\n     * - Mix between Douglas Crockford Prototypal Inheritance <http://javascript.crockford.com/prototypal.html> and the EcmaScript 5 `Object.create()` method.\n     * @param {object} parent    Parent Object.\n     * @param {object} [props] Object properties.\n     * @return {object} Created object.\n     */\n    function createObject(parent, props){\n        function F(){}\n        F.prototype = parent;\n        return mixIn(new F(), props);\n\n    }\n    module.exports = createObject;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/ctorApply.js":"\n\n    function F(){}\n\n    /**\n     * Do fn.apply on a constructor.\n     */\n    function ctorApply(ctor, args) {\n        F.prototype = ctor.prototype;\n        var instance = new F();\n        ctor.apply(instance, args);\n        return instance;\n    }\n\n    module.exports = ctorApply;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/deepClone.js":"var clone = require('./clone');\nvar forOwn = require('../object/forOwn');\nvar kindOf = require('./kindOf');\nvar isPlainObject = require('./isPlainObject');\n\n    /**\n     * Recursively clone native types.\n     */\n    function deepClone(val, instanceClone) {\n        switch ( kindOf(val) ) {\n            case 'Object':\n                return cloneObject(val, instanceClone);\n            case 'Array':\n                return cloneArray(val, instanceClone);\n            default:\n                return clone(val);\n        }\n    }\n\n    function cloneObject(source, instanceClone) {\n        if (isPlainObject(source)) {\n            var out = {};\n            forOwn(source, function(val, key) {\n                this[key] = deepClone(val, instanceClone);\n            }, out);\n            return out;\n        } else if (instanceClone) {\n            return instanceClone(source);\n        } else {\n            return source;\n        }\n    }\n\n    function cloneArray(arr, instanceClone) {\n        var out = [],\n            i = -1,\n            n = arr.length,\n            val;\n        while (++i < n) {\n            out[i] = deepClone(arr[i], instanceClone);\n        }\n        return out;\n    }\n\n    module.exports = deepClone;\n\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/deepEquals.js":"var is = require('./is');\nvar isObject = require('./isObject');\nvar isArray = require('./isArray');\nvar objEquals = require('../object/equals');\nvar arrEquals = require('../array/equals');\n\n    /**\n     * Recursively checks for same properties and values.\n     */\n    function deepEquals(a, b, callback){\n        callback = callback || is;\n\n        var bothObjects = isObject(a) && isObject(b);\n        var bothArrays = !bothObjects && isArray(a) && isArray(b);\n\n        if (!bothObjects && !bothArrays) {\n            return callback(a, b);\n        }\n\n        function compare(a, b){\n            return deepEquals(a, b, callback);\n        }\n\n        var method = bothObjects ? objEquals : arrEquals;\n        return method(a, b, compare);\n    }\n\n    module.exports = deepEquals;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/equals.js":"var hasOwn = require('./hasOwn');\nvar every = require('./every');\nvar isObject = require('../lang/isObject');\nvar is = require('../lang/is');\n\n    // Makes a function to compare the object values from the specified compare\n    // operation callback.\n    function makeCompare(callback) {\n        return function(value, key) {\n            return hasOwn(this, key) && callback(value, this[key]);\n        };\n    }\n\n    function checkProperties(value, key) {\n        return hasOwn(this, key);\n    }\n\n    /**\n     * Checks if two objects have the same keys and values.\n     */\n    function equals(a, b, callback) {\n        callback = callback || is;\n\n        if (!isObject(a) || !isObject(b)) {\n            return callback(a, b);\n        }\n\n        return (every(a, makeCompare(callback), b) &&\n                every(b, checkProperties, a));\n    }\n\n    module.exports = equals;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/defaults.js":"var toArray = require('./toArray');\nvar find = require('../array/find');\n\n    /**\n     * Return first non void argument\n     */\n    function defaults(var_args){\n        return find(toArray(arguments), nonVoid);\n    }\n\n    function nonVoid(val){\n        return val != null;\n    }\n\n    module.exports = defaults;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/toArray.js":"var kindOf = require('./kindOf');\nvar GLOBAL = require('./GLOBAL');\n\n    /**\n     * Convert array-like object into array\n     */\n    function toArray(val){\n        var ret = [],\n            kind = kindOf(val),\n            n;\n\n        if (val != null) {\n            if ( val.length == null || kind === 'String' || kind === 'Function' || kind === 'RegExp' || val === GLOBAL ) {\n                //string, regexp, function have .length but user probably just want\n                //to wrap value into an array..\n                ret[ret.length] = val;\n            } else {\n                //window returns true on isObject in IE7 and may have length\n                //property. `typeof NodeList` returns `function` on Safari so\n                //we can't use it (#58)\n                n = val.length;\n                while (n--) {\n                    ret[n] = val[n];\n                }\n            }\n        }\n        return ret;\n    }\n    module.exports = toArray;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/inheritPrototype.js":"var createObject = require('./createObject');\n\n    /**\n    * Inherit prototype from another Object.\n    * - inspired by Nicholas Zackas <http://nczonline.net> Solution\n    * @param {object} child Child object\n    * @param {object} parent    Parent Object\n    */\n    function inheritPrototype(child, parent){\n        var p = createObject(parent.prototype);\n        p.constructor = child;\n        child.prototype = p;\n        child.super_ = parent;\n        return p;\n    }\n\n    module.exports = inheritPrototype;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isArguments.js":"var isKind = require('./isKind');\n\n    /**\n     */\n    var isArgs = isKind(arguments, 'Arguments')?\n            function(val){\n                return isKind(val, 'Arguments');\n            } :\n            function(val){\n                // Arguments is an Object on IE7\n                return !!(val && Object.prototype.hasOwnProperty.call(val, 'callee'));\n            };\n\n    module.exports = isArgs;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isBoolean.js":"var isKind = require('./isKind');\n    /**\n     */\n    function isBoolean(val) {\n        return isKind(val, 'Boolean');\n    }\n    module.exports = isBoolean;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isEmpty.js":"var forOwn = require('../object/forOwn');\nvar isArray = require('./isArray');\n\n    function isEmpty(val){\n        if (val == null) {\n            // typeof null == 'object' so we check it first\n            return true;\n        } else if ( typeof val === 'string' || isArray(val) ) {\n            return !val.length;\n        } else if ( typeof val === 'object' ) {\n            var result = true;\n            forOwn(val, function(){\n                result = false;\n                return false; // break loop\n            });\n            return result;\n        } else {\n            return true;\n        }\n    }\n\n    module.exports = isEmpty;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isFinite.js":"var isNumber = require('./isNumber');\nvar GLOBAL = require('./GLOBAL');\n\n    /**\n     * Check if value is finite\n     */\n    function isFinite(val){\n        var is = false;\n        if (typeof val === 'string' && val !== '') {\n            is = GLOBAL.isFinite( parseFloat(val) );\n        } else if (isNumber(val)){\n            // need to use isNumber because of Number constructor\n            is = GLOBAL.isFinite( val );\n        }\n        return is;\n    }\n\n    module.exports = isFinite;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isNumber.js":"var isKind = require('./isKind');\n    /**\n     */\n    function isNumber(val) {\n        return isKind(val, 'Number');\n    }\n    module.exports = isNumber;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isInteger.js":"var isNumber = require('./isNumber');\n\n    /**\n     * Check if value is an integer\n     */\n    function isInteger(val){\n        return isNumber(val) && (val % 1 === 0);\n    }\n\n    module.exports = isInteger;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isNaN.js":"var isNumber = require('./isNumber');\nvar $isNaN = require('../number/isNaN');\n\n    /**\n     * Check if value is NaN for realz\n     */\n    function isNaN(val){\n        // based on the fact that NaN !== NaN\n        // need to check if it's a number to avoid conflicts with host objects\n        // also need to coerce ToNumber to avoid edge case `new Number(NaN)`\n        return !isNumber(val) || $isNaN(Number(val));\n    }\n\n    module.exports = isNaN;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number/isNaN.js":"\n\n    /**\n     * ES6 Number.isNaN\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\n     */\n    function isNaN(val){\n        // jshint eqeqeq:false\n        return typeof val === 'number' && val != val;\n    }\n\n    module.exports = isNaN;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isNull.js":"\n    /**\n     */\n    function isNull(val){\n        return val === null;\n    }\n    module.exports = isNull;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isPrimitive.js":"\n\n    /**\n     * Checks if the object is a primitive\n     */\n    function isPrimitive(value) {\n        // Using switch fallthrough because it's simple to read and is\n        // generally fast: http://jsperf.com/testing-value-is-primitive/5\n        switch (typeof value) {\n            case \"string\":\n            case \"number\":\n            case \"boolean\":\n                return true;\n        }\n\n        return value == null;\n    }\n\n    module.exports = isPrimitive;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isRegExp.js":"var isKind = require('./isKind');\n    /**\n     */\n    function isRegExp(val) {\n        return isKind(val, 'RegExp');\n    }\n    module.exports = isRegExp;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isString.js":"var isKind = require('./isKind');\n    /**\n     */\n    function isString(val) {\n        return isKind(val, 'String');\n    }\n    module.exports = isString;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isUndefined.js":"\n    var UNDEF;\n\n    /**\n     */\n    function isUndef(val){\n        return val === UNDEF;\n    }\n    module.exports = isUndef;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/lang/isnt.js":"var is = require('./is');\n\n    /**\n     * Check if both values are not identical/egal\n     */\n    function isnt(x, y){\n        return !is(x, y);\n    }\n\n    module.exports = isnt;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/math.js":"\n\n//automatically generated, do not edit!\n//run `node build` instead\nmodule.exports = {\n    'ceil' : require('./math/ceil'),\n    'clamp' : require('./math/clamp'),\n    'countSteps' : require('./math/countSteps'),\n    'floor' : require('./math/floor'),\n    'inRange' : require('./math/inRange'),\n    'isNear' : require('./math/isNear'),\n    'lerp' : require('./math/lerp'),\n    'loop' : require('./math/loop'),\n    'map' : require('./math/map'),\n    'norm' : require('./math/norm'),\n    'overflow' : require('./math/overflow'),\n    'round' : require('./math/round')\n};\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/math/ceil.js":"\n    /**\n     * Round value up with a custom radix.\n     */\n    function ceil(val, step){\n        step = Math.abs(step || 1);\n        return Math.ceil(val / step) * step;\n    }\n\n    module.exports = ceil;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/math/clamp.js":"\n    /**\n     * Clamps value inside range.\n     */\n    function clamp(val, min, max){\n        return val < min? min : (val > max? max : val);\n    }\n    module.exports = clamp;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/math/floor.js":"\n    /**\n    * Floor value to full steps.\n    */\n    function floor(val, step){\n        step = Math.abs(step || 1);\n        return Math.floor(val / step) * step;\n    }\n    module.exports = floor;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/math/inRange.js":"\n    /**\n    * Checks if value is inside the range.\n    */\n    function inRange(val, min, max, threshold){\n        threshold = threshold || 0;\n        return (val + threshold >= min && val - threshold <= max);\n    }\n\n    module.exports = inRange;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/math/isNear.js":"\n    /**\n    * Check if value is close to target.\n    */\n    function isNear(val, target, threshold){\n        return (Math.abs(val - target) <= threshold);\n    }\n    module.exports = isNear;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/math/lerp.js":"\n    /**\n    * Linear interpolation.\n    * IMPORTANT:will return `Infinity` if numbers overflow Number.MAX_VALUE\n    */\n    function lerp(ratio, start, end){\n        return start + (end - start) * ratio;\n    }\n\n    module.exports = lerp;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/math/loop.js":"\n    /**\n    * Loops value inside range.\n    */\n    function loop(val, min, max){\n        return val < min? max : (val > max? min : val);\n    }\n\n    module.exports = loop;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/math/map.js":"var lerp = require('./lerp');\nvar norm = require('./norm');\n    /**\n    * Maps a number from one scale to another.\n    * @example map(3, 0, 4, -1, 1) -> 0.5\n    */\n    function map(val, min1, max1, min2, max2){\n        return lerp( norm(val, min1, max1), min2, max2 );\n    }\n    module.exports = map;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/math/norm.js":"\n    /**\n    * Gets normalized ratio of value inside range.\n    */\n    function norm(val, min, max){\n        if (val < min || val > max) {\n            throw new RangeError('value (' + val + ') must be between ' + min + ' and ' + max);\n        }\n\n        return val === max ? 1 : (val - min) / (max - min);\n    }\n    module.exports = norm;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/math/overflow.js":"\n\n    /**\n     * Wraps number within bounds both positive and negative\n     */\n    function overflow(number, min, max){\n        if ( max === undefined ) {\n            max = min;\n            min = 0;\n        }\n\n        var difference = max - min;\n\n        if ( number < min ) {\n            number += difference * ( ~~( ( min - number ) / difference ) + 1 );\n        }\n\n        return min + ( number - min ) % difference;\n    }\n\n    module.exports = overflow;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/math/round.js":"\n    /**\n     * Round number to a specific radix\n     */\n    function round(value, radix){\n        radix = radix || 1; // default round 1\n        return Math.round(value / radix) * radix;\n    }\n\n    module.exports = round;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number.js":"\n\n//automatically generated, do not edit!\n//run `node build` instead\nmodule.exports = {\n    'MAX_INT' : require('./number/MAX_INT'),\n    'MAX_SAFE_INTEGER' : require('./number/MAX_SAFE_INTEGER'),\n    'MAX_UINT' : require('./number/MAX_UINT'),\n    'MIN_INT' : require('./number/MIN_INT'),\n    'abbreviate' : require('./number/abbreviate'),\n    'currencyFormat' : require('./number/currencyFormat'),\n    'enforcePrecision' : require('./number/enforcePrecision'),\n    'isNaN' : require('./number/isNaN'),\n    'nth' : require('./number/nth'),\n    'ordinal' : require('./number/ordinal'),\n    'pad' : require('./number/pad'),\n    'rol' : require('./number/rol'),\n    'ror' : require('./number/ror'),\n    'sign' : require('./number/sign'),\n    'toInt' : require('./number/toInt'),\n    'toUInt' : require('./number/toUInt'),\n    'toUInt31' : require('./number/toUInt31')\n};\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number/MAX_SAFE_INTEGER.js":"\n\n    // maximum safe integer (Math.pow(2, 53) - 1)\n    // see: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer\n    module.exports = 9007199254740991;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number/MAX_UINT.js":"/**\n * @constant Maximum 32-bit unsigned integet value (2^32 - 1)\n */\n\n    module.exports = 4294967295;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number/abbreviate.js":"var enforcePrecision = require('./enforcePrecision');\n\n    var _defaultDict = {\n        thousand : 'K',\n        million : 'M',\n        billion : 'B'\n    };\n\n    /**\n     * Abbreviate number if bigger than 1000. (eg: 2.5K, 17.5M, 3.4B, ...)\n     */\n    function abbreviateNumber(val, nDecimals, dict){\n        nDecimals = nDecimals != null? nDecimals : 1;\n        dict = dict || _defaultDict;\n        val = enforcePrecision(val, nDecimals);\n\n        var str, mod;\n\n        if (val < 1000000) {\n            mod = enforcePrecision(val / 1000, nDecimals);\n            // might overflow to next scale during rounding\n            str = mod < 1000? mod + dict.thousand : 1 + dict.million;\n        } else if (val < 1000000000) {\n            mod = enforcePrecision(val / 1000000, nDecimals);\n            str = mod < 1000? mod + dict.million : 1 + dict.billion;\n        } else {\n            str = enforcePrecision(val / 1000000000, nDecimals) + dict.billion;\n        }\n\n        return str;\n    }\n\n    module.exports = abbreviateNumber;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number/enforcePrecision.js":"var toNumber = require('../lang/toNumber');\n    /**\n     * Enforce a specific amount of decimal digits and also fix floating\n     * point rounding issues.\n     */\n    function enforcePrecision(val, nDecimalDigits){\n        val = toNumber(val);\n        var pow = Math.pow(10, nDecimalDigits);\n        return +(Math.round(val * pow) / pow).toFixed(nDecimalDigits);\n    }\n    module.exports = enforcePrecision;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number/currencyFormat.js":"var toNumber = require('../lang/toNumber');\n\n    /**\n     * Converts number into currency format\n     */\n    function currencyFormat(val, nDecimalDigits, decimalSeparator, thousandsSeparator) {\n        val = toNumber(val);\n        nDecimalDigits = nDecimalDigits == null? 2 : nDecimalDigits;\n        decimalSeparator = decimalSeparator == null? '.' : decimalSeparator;\n        thousandsSeparator = thousandsSeparator == null? ',' : thousandsSeparator;\n\n        //can't use enforce precision since it returns a number and we are\n        //doing a RegExp over the string\n        var fixed = val.toFixed(nDecimalDigits),\n            //separate begin [$1], middle [$2] and decimal digits [$4]\n            parts = new RegExp('^(-?\\\\d{1,3})((?:\\\\d{3})+)(\\\\.(\\\\d{'+ nDecimalDigits +'}))?$').exec( fixed );\n\n        if(parts){ //val >= 1000 || val <= -1000\n            return parts[1] + parts[2].replace(/\\d{3}/g, thousandsSeparator + '$&') + (parts[4] ? decimalSeparator + parts[4] : '');\n        }else{\n            return fixed.replace('.', decimalSeparator);\n        }\n    }\n\n    module.exports = currencyFormat;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number/nth.js":"\n\n    /**\n     * Returns \"nth\" of number (1 = \"st\", 2 = \"nd\", 3 = \"rd\", 4..10 = \"th\", ...)\n     */\n    function nth(i) {\n        var t = (i % 100);\n        if (t >= 10 && t <= 20) {\n            return 'th';\n        }\n        switch(i % 10) {\n            case 1:\n                return 'st';\n            case 2:\n                return 'nd';\n            case 3:\n                return 'rd';\n            default:\n                return 'th';\n        }\n    }\n\n    module.exports = nth;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number/ordinal.js":"var toInt = require('./toInt');\nvar nth = require('./nth');\n\n    /**\n     * converts number into ordinal form (1st, 2nd, 3rd, 4th, ...)\n     */\n    function ordinal(n){\n       n = toInt(n);\n       return n + nth(n);\n    }\n\n    module.exports = ordinal;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number/rol.js":"\n    /**\n     * Bitwise circular shift left\n     * http://en.wikipedia.org/wiki/Circular_shift\n     */\n    function rol(val, shift){\n        return (val << shift) | (val >> (32 - shift));\n    }\n    module.exports = rol;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number/ror.js":"\n    /**\n     * Bitwise circular shift right\n     * http://en.wikipedia.org/wiki/Circular_shift\n     */\n    function ror(val, shift){\n        return (val >> shift) | (val << (32 - shift));\n    }\n    module.exports = ror;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number/sign.js":"var toNumber = require('../lang/toNumber');\n\n    /**\n     * Get sign of the value.\n     */\n    function sign(val) {\n        var num = toNumber(val);\n        if (num === 0) return num; // +0 and +0 === 0\n        if (isNaN(num)) return num; // NaN\n        return num < 0? -1 : 1;\n    }\n\n    module.exports = sign;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number/toUInt.js":"\n\n    /**\n     * \"Convert\" value into a 32-bit unsigned integer.\n     * IMPORTANT: Value will wrap at 2^32.\n     */\n    function toUInt(val){\n        // we do not use lang/toNumber because of perf and also because it\n        // doesn't break the functionality\n        return val >>> 0;\n    }\n\n    module.exports = toUInt;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/number/toUInt31.js":"var MAX_INT = require('./MAX_INT');\n\n    /**\n     * \"Convert\" value into an 31-bit unsigned integer (since 1 bit is used for sign).\n     * IMPORTANT: value wil wrap at 2^31, if negative will return 0.\n     */\n    function toUInt31(val){\n        // we do not use lang/toNumber because of perf and also because it\n        // doesn't break the functionality\n        return (val <= 0)? 0 : (val > MAX_INT? ~~(val % (MAX_INT + 1)) : ~~val);\n    }\n\n    module.exports = toUInt31;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object.js":"\n\n//automatically generated, do not edit!\n//run `node build` instead\nmodule.exports = {\n    'bindAll' : require('./object/bindAll'),\n    'contains' : require('./object/contains'),\n    'deepFillIn' : require('./object/deepFillIn'),\n    'deepMatches' : require('./object/deepMatches'),\n    'deepMixIn' : require('./object/deepMixIn'),\n    'equals' : require('./object/equals'),\n    'every' : require('./object/every'),\n    'fillIn' : require('./object/fillIn'),\n    'filter' : require('./object/filter'),\n    'find' : require('./object/find'),\n    'flatten' : require('./object/flatten'),\n    'forIn' : require('./object/forIn'),\n    'forOwn' : require('./object/forOwn'),\n    'functions' : require('./object/functions'),\n    'get' : require('./object/get'),\n    'has' : require('./object/has'),\n    'hasOwn' : require('./object/hasOwn'),\n    'keys' : require('./object/keys'),\n    'map' : require('./object/map'),\n    'matches' : require('./object/matches'),\n    'max' : require('./object/max'),\n    'merge' : require('./object/merge'),\n    'min' : require('./object/min'),\n    'mixIn' : require('./object/mixIn'),\n    'namespace' : require('./object/namespace'),\n    'omit' : require('./object/omit'),\n    'pick' : require('./object/pick'),\n    'pluck' : require('./object/pluck'),\n    'reduce' : require('./object/reduce'),\n    'reject' : require('./object/reject'),\n    'result' : require('./object/result'),\n    'set' : require('./object/set'),\n    'size' : require('./object/size'),\n    'some' : require('./object/some'),\n    'unset' : require('./object/unset'),\n    'values' : require('./object/values')\n};\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/bindAll.js":"var functions = require('./functions');\nvar bind = require('../function/bind');\nvar forEach = require('../array/forEach');\nvar slice = require('../array/slice');\n\n    /**\n     * Binds methods of the object to be run in it's own context.\n     */\n    function bindAll(obj, rest_methodNames){\n        var keys = arguments.length > 1?\n                    slice(arguments, 1) : functions(obj);\n        forEach(keys, function(key){\n            obj[key] = bind(obj[key], obj);\n        });\n    }\n\n    module.exports = bindAll;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/functions.js":"var forIn = require('./forIn');\n\n    /**\n     * return a list of all enumerable properties that have function values\n     */\n    function functions(obj){\n        var keys = [];\n        forIn(obj, function(val, key){\n            if (typeof val === 'function'){\n                keys.push(key);\n            }\n        });\n        return keys.sort();\n    }\n\n    module.exports = functions;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/deepFillIn.js":"var forOwn = require('./forOwn');\nvar isPlainObject = require('../lang/isPlainObject');\n\n    /**\n     * Deeply copy missing properties in the target from the defaults.\n     */\n    function deepFillIn(target, defaults){\n        var i = 0,\n            n = arguments.length,\n            obj;\n\n        while(++i < n) {\n            obj = arguments[i];\n            if (obj) {\n                // jshint loopfunc: true\n                forOwn(obj, function(newValue, key) {\n                    var curValue = target[key];\n                    if (curValue == null) {\n                        target[key] = newValue;\n                    } else if (isPlainObject(curValue) &&\n                               isPlainObject(newValue)) {\n                        deepFillIn(curValue, newValue);\n                    }\n                });\n            }\n        }\n\n        return target;\n    }\n\n    module.exports = deepFillIn;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/deepMixIn.js":"var forOwn = require('./forOwn');\nvar isPlainObject = require('../lang/isPlainObject');\n\n    /**\n     * Mixes objects into the target object, recursively mixing existing child\n     * objects.\n     */\n    function deepMixIn(target, objects) {\n        var i = 0,\n            n = arguments.length,\n            obj;\n\n        while(++i < n){\n            obj = arguments[i];\n            if (obj) {\n                forOwn(obj, copyProp, target);\n            }\n        }\n\n        return target;\n    }\n\n    function copyProp(val, key) {\n        var existing = this[key];\n        if (isPlainObject(val) && isPlainObject(existing)) {\n            deepMixIn(existing, val);\n        } else {\n            this[key] = val;\n        }\n    }\n\n    module.exports = deepMixIn;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/fillIn.js":"var forEach = require('../array/forEach');\nvar slice = require('../array/slice');\nvar forOwn = require('./forOwn');\n\n    /**\n     * Copy missing properties in the obj from the defaults.\n     */\n    function fillIn(obj, var_defaults){\n        forEach(slice(arguments, 1), function(base){\n            forOwn(base, function(val, key){\n                if (obj[key] == null) {\n                    obj[key] = val;\n                }\n            });\n        });\n        return obj;\n    }\n\n    module.exports = fillIn;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/filter.js":"var forOwn = require('./forOwn');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Creates a new object with all the properties where the callback returns\n     * true.\n     */\n    function filterValues(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var output = {};\n        forOwn(obj, function(value, key, obj) {\n            if (callback(value, key, obj)) {\n                output[key] = value;\n            }\n        });\n\n        return output;\n    }\n    module.exports = filterValues;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/flatten.js":"var forOwn = require('./forOwn');\nvar isPlainObject = require('../lang/isPlainObject');\n\n    /*\n     * Helper function to flatten to a destination object.\n     * Used to remove the need to create intermediate objects while flattening.\n     */\n    function flattenTo(obj, result, prefix, level) {\n        forOwn(obj, function (value, key) {\n            var nestedPrefix = prefix ? prefix + '.' + key : key;\n\n            if (level !== 0 && isPlainObject(value)) {\n                flattenTo(value, result, nestedPrefix, level - 1);\n            } else {\n                result[nestedPrefix] = value;\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * Recursively flattens an object.\n     * A new object containing all the elements is returned.\n     * If level is specified, it will only flatten up to that level.\n     */\n    function flatten(obj, level) {\n        if (obj == null) {\n            return {};\n        }\n\n        level = level == null ? -1 : level;\n        return flattenTo(obj, {}, '', level);\n    }\n\n    module.exports = flatten;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/get.js":"var isPrimitive = require('../lang/isPrimitive');\n\n    /**\n     * get \"nested\" object property\n     */\n    function get(obj, prop){\n        var parts = prop.split('.'),\n            last = parts.pop();\n\n        while (prop = parts.shift()) {\n            obj = obj[prop];\n            if (obj == null) return;\n        }\n\n        return obj[last];\n    }\n\n    module.exports = get;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/has.js":"var get = require('./get');\n\n    var UNDEF;\n\n    /**\n     * Check if object has nested property.\n     */\n    function has(obj, prop){\n        return get(obj, prop) !== UNDEF;\n    }\n\n    module.exports = has;\n\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/keys.js":"var forOwn = require('./forOwn');\n\n    /**\n     * Get object keys\n     */\n     var keys = Object.keys || function (obj) {\n            var keys = [];\n            forOwn(obj, function(val, key){\n                keys.push(key);\n            });\n            return keys;\n        };\n\n    module.exports = keys;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/map.js":"var forOwn = require('./forOwn');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Creates a new object where all the values are the result of calling\n     * `callback`.\n     */\n    function mapValues(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var output = {};\n        forOwn(obj, function(val, key, obj) {\n            output[key] = callback(val, key, obj);\n        });\n\n        return output;\n    }\n    module.exports = mapValues;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/matches.js":"var forOwn = require('./forOwn');\n\n    /**\n     * checks if a object contains all given properties/values\n     */\n    function matches(target, props){\n        // can't use \"object/every\" because of circular dependency\n        var result = true;\n        forOwn(props, function(val, key){\n            if (target[key] !== val) {\n                // break loop at first difference\n                return (result = false);\n            }\n        });\n        return result;\n    }\n\n    module.exports = matches;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/merge.js":"var hasOwn = require('./hasOwn');\nvar deepClone = require('../lang/deepClone');\nvar isObject = require('../lang/isObject');\n\n    /**\n     * Deep merge objects.\n     */\n    function merge() {\n        var i = 1,\n            key, val, obj, target;\n\n        // make sure we don't modify source element and it's properties\n        // objects are passed by reference\n        target = deepClone( arguments[0] );\n\n        while (obj = arguments[i++]) {\n            for (key in obj) {\n                if ( ! hasOwn(obj, key) ) {\n                    continue;\n                }\n\n                val = obj[key];\n\n                if ( isObject(val) && isObject(target[key]) ){\n                    // inception, deep merge objects\n                    target[key] = merge(target[key], val);\n                } else {\n                    // make sure arrays, regexp, date, objects are cloned\n                    target[key] = deepClone(val);\n                }\n\n            }\n        }\n\n        return target;\n    }\n\n    module.exports = merge;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/namespace.js":"var forEach = require('../array/forEach');\n\n    /**\n     * Create nested object if non-existent\n     */\n    function namespace(obj, path){\n        if (!path) return obj;\n        forEach(path.split('.'), function(key){\n            if (!obj[key]) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        });\n        return obj;\n    }\n\n    module.exports = namespace;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/omit.js":"var slice = require('../array/slice');\nvar contains = require('../array/contains');\n\n    /**\n     * Return a copy of the object, filtered to only contain properties except the blacklisted keys.\n     */\n    function omit(obj, var_keys){\n        var keys = typeof arguments[1] !== 'string'? arguments[1] : slice(arguments, 1),\n            out = {};\n\n        for (var property in obj) {\n            if (obj.hasOwnProperty(property) && !contains(keys, property)) {\n                out[property] = obj[property];\n            }\n        }\n        return out;\n    }\n\n    module.exports = omit;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/pick.js":"var slice = require('../array/slice');\n\n    /**\n     * Return a copy of the object, filtered to only have values for the whitelisted keys.\n     */\n    function pick(obj, var_keys){\n        var keys = typeof arguments[1] !== 'string'? arguments[1] : slice(arguments, 1),\n            out = {},\n            i = 0, key;\n        while (key = keys[i++]) {\n            out[key] = obj[key];\n        }\n        return out;\n    }\n\n    module.exports = pick;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/pluck.js":"var map = require('./map');\nvar prop = require('../function/prop');\n\n    /**\n     * Extract a list of property values.\n     */\n    function pluck(obj, propName){\n        return map(obj, prop(propName));\n    }\n\n    module.exports = pluck;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/reject.js":"var filter = require('./filter');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Object reject\n     */\n    function reject(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        return filter(obj, function(value, index, obj) {\n            return !callback(value, index, obj);\n        }, thisObj);\n    }\n\n    module.exports = reject;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/result.js":"var isFunction = require('../lang/isFunction');\n\n    function result(obj, prop) {\n        var property = obj[prop];\n\n        if(property === undefined) {\n            return;\n        }\n\n        return isFunction(property) ? property.call(obj) : property;\n    }\n\n    module.exports = result;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/set.js":"var namespace = require('./namespace');\n\n    /**\n     * set \"nested\" object property\n     */\n    function set(obj, prop, val){\n        var parts = (/^(.+)\\.(.+)$/).exec(prop);\n        if (parts){\n            namespace(obj, parts[1])[parts[2]] = val;\n        } else {\n            obj[prop] = val;\n        }\n    }\n\n    module.exports = set;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/object/unset.js":"var has = require('./has');\n\n    /**\n     * Unset object property.\n     */\n    function unset(obj, prop){\n        if (has(obj, prop)) {\n            var parts = prop.split('.'),\n                last = parts.pop();\n            while (prop = parts.shift()) {\n                obj = obj[prop];\n            }\n            return (delete obj[last]);\n\n        } else {\n            // if property doesn't exist treat as deleted\n            return true;\n        }\n    }\n\n    module.exports = unset;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/queryString.js":"\n\n//automatically generated, do not edit!\n//run `node build` instead\nmodule.exports = {\n    'contains' : require('./queryString/contains'),\n    'decode' : require('./queryString/decode'),\n    'encode' : require('./queryString/encode'),\n    'getParam' : require('./queryString/getParam'),\n    'getQuery' : require('./queryString/getQuery'),\n    'parse' : require('./queryString/parse'),\n    'setParam' : require('./queryString/setParam')\n};\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/queryString/contains.js":"var getQuery = require('./getQuery');\n\n    /**\n     * Checks if query string contains parameter.\n     */\n    function contains(url, paramName) {\n        var regex = new RegExp('(\\\\?|&)'+ paramName +'=', 'g'); //matches `?param=` or `&param=`\n        return regex.test(getQuery(url));\n    }\n\n    module.exports = contains;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/queryString/getQuery.js":"\n\n    /**\n     * Gets full query as string with all special chars decoded.\n     */\n    function getQuery(url) {\n        // url = url.replace(/#.*\\?/, '?'); //removes hash (to avoid getting hash query)\n        var queryString = /\\?[a-zA-Z0-9\\=\\&\\%\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]+/.exec(url); //valid chars according to: http://www.ietf.org/rfc/rfc1738.txt\n        return (queryString)? decodeURIComponent(queryString[0].replace(/\\+/g,' ')) : '';\n    }\n\n    module.exports = getQuery;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/queryString/decode.js":"var typecast = require('../string/typecast');\nvar isArray = require('../lang/isArray');\nvar hasOwn = require('../object/hasOwn');\n\n    /**\n     * Decode query string into an object of keys => vals.\n     */\n    function decode(queryStr, shouldTypecast) {\n        var queryArr = (queryStr || '').replace('?', '').split('&'),\n            reg = /([^=]+)=(.+)/,\n            i = -1,\n            obj = {},\n            equalIndex, cur, pValue, pName;\n\n        while ((cur = queryArr[++i])) {\n            equalIndex = cur.indexOf('=');\n            pName = cur.substring(0, equalIndex);\n            pValue = decodeURIComponent(cur.substring(equalIndex + 1));\n            if (shouldTypecast !== false) {\n                pValue = typecast(pValue);\n            }\n            if (hasOwn(obj, pName)){\n                if(isArray(obj[pName])){\n                    obj[pName].push(pValue);\n                } else {\n                    obj[pName] = [obj[pName], pValue];\n                }\n            } else {\n                obj[pName] = pValue;\n           }\n        }\n        return obj;\n    }\n\n    module.exports = decode;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/typecast.js":"\n\n    var UNDEF;\n\n    /**\n     * Parses string and convert it into a native value.\n     */\n    function typecast(val) {\n        var r;\n        if ( val === null || val === 'null' ) {\n            r = null;\n        } else if ( val === 'true' ) {\n            r = true;\n        } else if ( val === 'false' ) {\n            r = false;\n        } else if ( val === UNDEF || val === 'undefined' ) {\n            r = UNDEF;\n        } else if ( val === '' || isNaN(val) ) {\n            //isNaN('') returns false\n            r = val;\n        } else {\n            //parseFloat(null || '') returns NaN\n            r = parseFloat(val);\n        }\n        return r;\n    }\n\n    module.exports = typecast;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/queryString/encode.js":"var forOwn = require('../object/forOwn');\nvar isArray = require('../lang/isArray');\nvar forEach = require('../array/forEach');\n\n    /**\n     * Encode object into a query string.\n     */\n    function encode(obj){\n        var query = [],\n            arrValues, reg;\n        forOwn(obj, function (val, key) {\n            if (isArray(val)) {\n                arrValues = key + '=';\n                reg = new RegExp('&'+key+'+=$');\n                forEach(val, function (aValue) {\n                    arrValues += encodeURIComponent(aValue) + '&' + key + '=';\n                });\n                query.push(arrValues.replace(reg, ''));\n            } else {\n               query.push(key + '=' + encodeURIComponent(val));\n            }\n        });\n        return (query.length) ? '?' + query.join('&') : '';\n    }\n\n    module.exports = encode;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/queryString/getParam.js":"var typecast = require('../string/typecast');\nvar getQuery = require('./getQuery');\n\n    /**\n     * Get query parameter value.\n     */\n    function getParam(url, param, shouldTypecast){\n        var regexp = new RegExp('(\\\\?|&)'+ param + '=([^&]*)'), //matches `?param=value` or `&param=value`, value = $2\n            result = regexp.exec( getQuery(url) ),\n            val = (result && result[2])? result[2] : null;\n        return shouldTypecast === false? val : typecast(val);\n    }\n\n    module.exports = getParam;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/queryString/parse.js":"var decode = require('./decode');\nvar getQuery = require('./getQuery');\n\n    /**\n     * Get query string, parses and decodes it.\n     */\n    function parse(url, shouldTypecast) {\n        return decode(getQuery(url), shouldTypecast);\n    }\n\n    module.exports = parse;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/queryString/setParam.js":"\n\n    /**\n     * Set query string parameter value\n     */\n    function setParam(url, paramName, value){\n        url = url || '';\n\n        var re = new RegExp('(\\\\?|&)'+ paramName +'=[^&]*' );\n        var param = paramName +'='+ encodeURIComponent( value );\n\n        if ( re.test(url) ) {\n            return url.replace(re, '$1'+ param);\n        } else {\n            if (url.indexOf('?') === -1) {\n                url += '?';\n            }\n            if (url.indexOf('=') !== -1) {\n                url += '&';\n            }\n            return url + param;\n        }\n\n    }\n\n    module.exports = setParam;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/random.js":"\n\n//automatically generated, do not edit!\n//run `node build` instead\nmodule.exports = {\n    'choice' : require('./random/choice'),\n    'guid' : require('./random/guid'),\n    'rand' : require('./random/rand'),\n    'randBit' : require('./random/randBit'),\n    'randBool' : require('./random/randBool'),\n    'randHex' : require('./random/randHex'),\n    'randInt' : require('./random/randInt'),\n    'randSign' : require('./random/randSign'),\n    'randString' : require('./random/randString'),\n    'random' : require('./random/random')\n};\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/random/choice.js":"var randInt = require('./randInt');\nvar isArray = require('../lang/isArray');\n\n    /**\n     * Returns a random element from the supplied arguments\n     * or from the array (if single argument is an array).\n     */\n    function choice(items) {\n        var target = (arguments.length === 1 && isArray(items))? items : arguments;\n        return target[ randInt(0, target.length - 1) ];\n    }\n\n    module.exports = choice;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/random/guid.js":"var randHex = require('./randHex');\nvar choice = require('./choice');\n\n  /**\n   * Returns pseudo-random guid (UUID v4)\n   * IMPORTANT: it's not totally \"safe\" since randHex/choice uses Math.random\n   * by default and sequences can be predicted in some cases. See the\n   * \"random/random\" documentation for more info about it and how to replace\n   * the default PRNG.\n   */\n  function guid() {\n    return (\n        randHex(8)+'-'+\n        randHex(4)+'-'+\n        // v4 UUID always contain \"4\" at this position to specify it was\n        // randomly generated\n        '4' + randHex(3) +'-'+\n        // v4 UUID always contain chars [a,b,8,9] at this position\n        choice(8, 9, 'a', 'b') + randHex(3)+'-'+\n        randHex(12)\n    );\n  }\n  module.exports = guid;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/random/randHex.js":"var choice = require('./choice');\n\n    var _chars = '0123456789abcdef'.split('');\n\n    /**\n     * Returns a random hexadecimal string\n     */\n    function randHex(size){\n        size = size && size > 0? size : 6;\n        var str = '';\n        while (size--) {\n            str += choice(_chars);\n        }\n        return str;\n    }\n\n    module.exports = randHex;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/random/randBit.js":"var randBool = require('./randBool');\n\n    /**\n     * Returns random bit (0 or 1)\n     */\n    function randomBit() {\n        return randBool()? 1 : 0;\n    }\n\n    module.exports = randomBit;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/random/randBool.js":"var random = require('./random');\n\n    /**\n     * returns a random boolean value (true or false)\n     */\n    function randBool(){\n        return random() >= 0.5;\n    }\n\n    module.exports = randBool;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/random/randSign.js":"var randBool = require('./randBool');\n\n    /**\n     * Returns random sign (-1 or 1)\n     */\n    function randomSign() {\n        return randBool()? 1 : -1;\n    }\n\n    module.exports = randomSign;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/random/randString.js":"var isNumber = require('../lang/isNumber');\nvar isString = require('../lang/isString');\nvar randInt = require('./randInt');\n\n    var defaultDictionary = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n    function randomString(length, dictionary) {\n        if(!isNumber(length) || length <= 0) {\n          length = 8;\n        }\n\n        if(!isString(dictionary) || dictionary.length < 1) {\n          dictionary = defaultDictionary;\n        }\n\n        var result = '',\n            domain = dictionary.length - 1;\n\n        while(length--) {\n          result += dictionary[randInt(0, domain)];\n        }\n        \n        return result;\n    }\n\n    module.exports = randomString;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string.js":"\n\n//automatically generated, do not edit!\n//run `node build` instead\nmodule.exports = {\n    'WHITE_SPACES' : require('./string/WHITE_SPACES'),\n    'camelCase' : require('./string/camelCase'),\n    'contains' : require('./string/contains'),\n    'crop' : require('./string/crop'),\n    'endsWith' : require('./string/endsWith'),\n    'escapeHtml' : require('./string/escapeHtml'),\n    'escapeRegExp' : require('./string/escapeRegExp'),\n    'escapeUnicode' : require('./string/escapeUnicode'),\n    'hyphenate' : require('./string/hyphenate'),\n    'insert' : require('./string/insert'),\n    'interpolate' : require('./string/interpolate'),\n    'lowerCase' : require('./string/lowerCase'),\n    'lpad' : require('./string/lpad'),\n    'ltrim' : require('./string/ltrim'),\n    'makePath' : require('./string/makePath'),\n    'normalizeLineBreaks' : require('./string/normalizeLineBreaks'),\n    'pascalCase' : require('./string/pascalCase'),\n    'properCase' : require('./string/properCase'),\n    'removeNonASCII' : require('./string/removeNonASCII'),\n    'removeNonWord' : require('./string/removeNonWord'),\n    'repeat' : require('./string/repeat'),\n    'replace' : require('./string/replace'),\n    'replaceAccents' : require('./string/replaceAccents'),\n    'rpad' : require('./string/rpad'),\n    'rtrim' : require('./string/rtrim'),\n    'sentenceCase' : require('./string/sentenceCase'),\n    'slugify' : require('./string/slugify'),\n    'startsWith' : require('./string/startsWith'),\n    'stripHtmlTags' : require('./string/stripHtmlTags'),\n    'trim' : require('./string/trim'),\n    'truncate' : require('./string/truncate'),\n    'typecast' : require('./string/typecast'),\n    'unCamelCase' : require('./string/unCamelCase'),\n    'underscore' : require('./string/underscore'),\n    'unescapeHtml' : require('./string/unescapeHtml'),\n    'unescapeUnicode' : require('./string/unescapeUnicode'),\n    'unhyphenate' : require('./string/unhyphenate'),\n    'upperCase' : require('./string/upperCase')\n};\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/WHITE_SPACES.js":"\n    /**\n     * Contains all Unicode white-spaces. Taken from\n     * http://en.wikipedia.org/wiki/Whitespace_character.\n     */\n    module.exports = [\n        ' ', '\\n', '\\r', '\\t', '\\f', '\\v', '\\u00A0', '\\u1680', '\\u180E',\n        '\\u2000', '\\u2001', '\\u2002', '\\u2003', '\\u2004', '\\u2005', '\\u2006',\n        '\\u2007', '\\u2008', '\\u2009', '\\u200A', '\\u2028', '\\u2029', '\\u202F',\n        '\\u205F', '\\u3000'\n    ];\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/camelCase.js":"var toString = require('../lang/toString');\nvar replaceAccents = require('./replaceAccents');\nvar removeNonWord = require('./removeNonWord');\nvar upperCase = require('./upperCase');\nvar lowerCase = require('./lowerCase');\n    /**\n    * Convert string to camelCase text.\n    */\n    function camelCase(str){\n        str = toString(str);\n        str = replaceAccents(str);\n        str = removeNonWord(str)\n            .replace(/[\\-_]/g, ' ') //convert all hyphens and underscores to spaces\n            .replace(/\\s[a-z]/g, upperCase) //convert first char of each word to UPPERCASE\n            .replace(/\\s+/g, '') //remove spaces\n            .replace(/^[A-Z]/g, lowerCase); //convert first char to lowercase\n        return str;\n    }\n    module.exports = camelCase;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/replaceAccents.js":"var toString = require('../lang/toString');\n    /**\n    * Replaces all accented chars with regular ones\n    */\n    function replaceAccents(str){\n        str = toString(str);\n\n        // verifies if the String has accents and replace them\n        if (str.search(/[\\xC0-\\xFF]/g) > -1) {\n            str = str\n                    .replace(/[\\xC0-\\xC5]/g, \"A\")\n                    .replace(/[\\xC6]/g, \"AE\")\n                    .replace(/[\\xC7]/g, \"C\")\n                    .replace(/[\\xC8-\\xCB]/g, \"E\")\n                    .replace(/[\\xCC-\\xCF]/g, \"I\")\n                    .replace(/[\\xD0]/g, \"D\")\n                    .replace(/[\\xD1]/g, \"N\")\n                    .replace(/[\\xD2-\\xD6\\xD8]/g, \"O\")\n                    .replace(/[\\xD9-\\xDC]/g, \"U\")\n                    .replace(/[\\xDD]/g, \"Y\")\n                    .replace(/[\\xDE]/g, \"P\")\n                    .replace(/[\\xE0-\\xE5]/g, \"a\")\n                    .replace(/[\\xE6]/g, \"ae\")\n                    .replace(/[\\xE7]/g, \"c\")\n                    .replace(/[\\xE8-\\xEB]/g, \"e\")\n                    .replace(/[\\xEC-\\xEF]/g, \"i\")\n                    .replace(/[\\xF1]/g, \"n\")\n                    .replace(/[\\xF2-\\xF6\\xF8]/g, \"o\")\n                    .replace(/[\\xF9-\\xFC]/g, \"u\")\n                    .replace(/[\\xFE]/g, \"p\")\n                    .replace(/[\\xFD\\xFF]/g, \"y\");\n        }\n        return str;\n    }\n    module.exports = replaceAccents;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/removeNonWord.js":"var toString = require('../lang/toString');\n    // This pattern is generated by the _build/pattern-removeNonWord.js script\n    var PATTERN = /[^\\x20\\x2D0-9A-Z\\x5Fa-z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF]/g;\n\n    /**\n     * Remove non-word chars.\n     */\n    function removeNonWord(str){\n        str = toString(str);\n        return str.replace(PATTERN, '');\n    }\n\n    module.exports = removeNonWord;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/upperCase.js":"var toString = require('../lang/toString');\n    /**\n     * \"Safer\" String.toUpperCase()\n     */\n    function upperCase(str){\n        str = toString(str);\n        return str.toUpperCase();\n    }\n    module.exports = upperCase;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/lowerCase.js":"var toString = require('../lang/toString');\n    /**\n     * \"Safer\" String.toLowerCase()\n     */\n    function lowerCase(str){\n        str = toString(str);\n        return str.toLowerCase();\n    }\n\n    module.exports = lowerCase;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/contains.js":"var toString = require('../lang/toString');\n\n    /**\n     * Searches for a given substring\n     */\n    function contains(str, substring, fromIndex){\n        str = toString(str);\n        substring = toString(substring);\n        return str.indexOf(substring, fromIndex) !== -1;\n    }\n\n    module.exports = contains;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/crop.js":"var toString = require('../lang/toString');\nvar truncate = require('./truncate');\n    /**\n     * Truncate string at full words.\n     */\n     function crop(str, maxChars, append) {\n         str = toString(str);\n         return truncate(str, maxChars, append, true);\n     }\n\n     module.exports = crop;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/truncate.js":"var toString = require('../lang/toString');\nvar trim = require('./trim');\n    /**\n     * Limit number of chars.\n     */\n    function truncate(str, maxChars, append, onlyFullWords){\n        str = toString(str);\n        append = append || '...';\n        maxChars = onlyFullWords? maxChars + 1 : maxChars;\n\n        str = trim(str);\n        if(str.length <= maxChars){\n            return str;\n        }\n        str = str.substr(0, maxChars - append.length);\n        //crop at last space or remove trailing whitespace\n        str = onlyFullWords? str.substr(0, str.lastIndexOf(' ')) : trim(str);\n        return str + append;\n    }\n    module.exports = truncate;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/trim.js":"var toString = require('../lang/toString');\nvar WHITE_SPACES = require('./WHITE_SPACES');\nvar ltrim = require('./ltrim');\nvar rtrim = require('./rtrim');\n    /**\n     * Remove white-spaces from beginning and end of string.\n     */\n    function trim(str, chars) {\n        str = toString(str);\n        chars = chars || WHITE_SPACES;\n        return ltrim(rtrim(str, chars), chars);\n    }\n\n    module.exports = trim;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/ltrim.js":"var toString = require('../lang/toString');\nvar WHITE_SPACES = require('./WHITE_SPACES');\n    /**\n     * Remove chars from beginning of string.\n     */\n    function ltrim(str, chars) {\n        str = toString(str);\n        chars = chars || WHITE_SPACES;\n\n        var start = 0,\n            len = str.length,\n            charLen = chars.length,\n            found = true,\n            i, c;\n\n        while (found && start < len) {\n            found = false;\n            i = -1;\n            c = str.charAt(start);\n\n            while (++i < charLen) {\n                if (c === chars[i]) {\n                    found = true;\n                    start++;\n                    break;\n                }\n            }\n        }\n\n        return (start >= len) ? '' : str.substr(start, len);\n    }\n\n    module.exports = ltrim;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/rtrim.js":"var toString = require('../lang/toString');\nvar WHITE_SPACES = require('./WHITE_SPACES');\n    /**\n     * Remove chars from end of string.\n     */\n    function rtrim(str, chars) {\n        str = toString(str);\n        chars = chars || WHITE_SPACES;\n\n        var end = str.length - 1,\n            charLen = chars.length,\n            found = true,\n            i, c;\n\n        while (found && end >= 0) {\n            found = false;\n            i = -1;\n            c = str.charAt(end);\n\n            while (++i < charLen) {\n                if (c === chars[i]) {\n                    found = true;\n                    end--;\n                    break;\n                }\n            }\n        }\n\n        return (end >= 0) ? str.substring(0, end + 1) : '';\n    }\n\n    module.exports = rtrim;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/endsWith.js":"var toString = require('../lang/toString');\n    /**\n     * Checks if string ends with specified suffix.\n     */\n    function endsWith(str, suffix) {\n        str = toString(str);\n        suffix = toString(suffix);\n\n        return str.indexOf(suffix, str.length - suffix.length) !== -1;\n    }\n\n    module.exports = endsWith;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/escapeHtml.js":"var toString = require('../lang/toString');\n\n    /**\n     * Escapes a string for insertion into HTML.\n     */\n    function escapeHtml(str){\n        str = toString(str)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/'/g, '&#39;')\n            .replace(/\"/g, '&quot;');\n        return str;\n    }\n\n    module.exports = escapeHtml;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/escapeRegExp.js":"var toString = require('../lang/toString');\n\n    /**\n     * Escape RegExp string chars.\n     */\n    function escapeRegExp(str) {\n        return toString(str).replace(/\\W/g,'\\\\$&');\n    }\n\n    module.exports = escapeRegExp;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/escapeUnicode.js":"var toString = require('../lang/toString');\n\n    /**\n     * Escape string into unicode sequences\n     */\n    function escapeUnicode(str, shouldEscapePrintable){\n        str = toString(str);\n        return str.replace(/[\\s\\S]/g, function(ch){\n            // skip printable ASCII chars if we should not escape them\n            if (!shouldEscapePrintable && (/[\\x20-\\x7E]/).test(ch)) {\n                return ch;\n            }\n            // we use \"000\" and slice(-4) for brevity, need to pad zeros,\n            // unicode escape always have 4 chars after \"\\u\"\n            return '\\\\u'+ ('000'+ ch.charCodeAt(0).toString(16)).slice(-4);\n        });\n    }\n\n    module.exports = escapeUnicode;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/hyphenate.js":"var toString = require('../lang/toString');\nvar slugify = require('./slugify');\nvar unCamelCase = require('./unCamelCase');\n    /**\n     * Replaces spaces with hyphens, split camelCase text, remove non-word chars, remove accents and convert to lower case.\n     */\n    function hyphenate(str){\n        str = toString(str);\n        str = unCamelCase(str);\n        return slugify(str, \"-\");\n    }\n\n    module.exports = hyphenate;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/slugify.js":"var toString = require('../lang/toString');\nvar replaceAccents = require('./replaceAccents');\nvar removeNonWord = require('./removeNonWord');\nvar trim = require('./trim');\n    /**\n     * Convert to lower case, remove accents, remove non-word chars and\n     * replace spaces with the specified delimeter.\n     * Does not split camelCase text.\n     */\n    function slugify(str, delimeter){\n        str = toString(str);\n\n        if (delimeter == null) {\n            delimeter = \"-\";\n        }\n        str = replaceAccents(str);\n        str = removeNonWord(str);\n        str = trim(str) //should come after removeNonWord\n                .replace(/ +/g, delimeter) //replace spaces with delimeter\n                .toLowerCase();\n        return str;\n    }\n    module.exports = slugify;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/unCamelCase.js":"var toString = require('../lang/toString');\n\n    var CAMEL_CASE_BORDER = /([a-z\\xE0-\\xFF])([A-Z\\xC0\\xDF])/g;\n\n    /**\n     * Add space between camelCase text.\n     */\n    function unCamelCase(str, delimiter){\n        if (delimiter == null) {\n            delimiter = ' ';\n        }\n\n        function join(str, c1, c2) {\n            return c1 + delimiter + c2;\n        }\n\n        str = toString(str);\n        str = str.replace(CAMEL_CASE_BORDER, join);\n        str = str.toLowerCase(); //add space between camelCase text\n        return str;\n    }\n    module.exports = unCamelCase;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/insert.js":"var clamp = require('../math/clamp');\nvar toString = require('../lang/toString');\n\n    /**\n     * Inserts a string at a given index.\n     */\n    function insert(string, index, partial){\n        string = toString(string);\n\n        if (index < 0) {\n            index = string.length + index;\n        }\n\n        index = clamp(index, 0, string.length);\n\n        return string.substr(0, index) + partial + string.substr(index);\n    }\n\n    module.exports = insert;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/interpolate.js":"var toString = require('../lang/toString');\nvar get = require('../object/get');\n\n    var stache = /\\{\\{([^\\}]+)\\}\\}/g; //mustache-like\n\n    /**\n     * String interpolation\n     */\n    function interpolate(template, replacements, syntax){\n        template = toString(template);\n        var replaceFn = function(match, prop){\n            return toString( get(replacements, prop) );\n        };\n        return template.replace(syntax || stache, replaceFn);\n    }\n\n    module.exports = interpolate;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/makePath.js":"var join = require('../array/join');\nvar slice = require('../array/slice');\n\n    /**\n     * Group arguments as path segments, if any of the args is `null` or an\n     * empty string it will be ignored from resulting path.\n     */\n    function makePath(var_args){\n        var result = join(slice(arguments), '/');\n        // need to disconsider duplicate '/' after protocol (eg: 'http://')\n        return result.replace(/([^:\\/]|^)\\/{2,}/g, '$1/');\n    }\n\n    module.exports = makePath;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/normalizeLineBreaks.js":"var toString = require('../lang/toString');\n\n    /**\n     * Convert line-breaks from DOS/MAC to a single standard (UNIX by default)\n     */\n    function normalizeLineBreaks(str, lineEnd) {\n        str = toString(str);\n        lineEnd = lineEnd || '\\n';\n\n        return str\n            .replace(/\\r\\n/g, lineEnd) // DOS\n            .replace(/\\r/g, lineEnd)   // Mac\n            .replace(/\\n/g, lineEnd);  // Unix\n    }\n\n    module.exports = normalizeLineBreaks;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/pascalCase.js":"var toString = require('../lang/toString');\nvar camelCase = require('./camelCase');\nvar upperCase = require('./upperCase');\n    /**\n     * camelCase + UPPERCASE first char\n     */\n    function pascalCase(str){\n        str = toString(str);\n        return camelCase(str).replace(/^[a-z]/, upperCase);\n    }\n\n    module.exports = pascalCase;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/properCase.js":"var toString = require('../lang/toString');\nvar lowerCase = require('./lowerCase');\nvar upperCase = require('./upperCase');\n    /**\n     * UPPERCASE first char of each word.\n     */\n    function properCase(str){\n        str = toString(str);\n        return lowerCase(str).replace(/^\\w|\\s\\w/g, upperCase);\n    }\n\n    module.exports = properCase;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/removeNonASCII.js":"var toString = require('../lang/toString');\n    /**\n     * Remove non-printable ASCII chars\n     */\n    function removeNonASCII(str){\n        str = toString(str);\n\n        // Matches non-printable ASCII chars -\n        // http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters\n        return str.replace(/[^\\x20-\\x7E]/g, '');\n    }\n\n    module.exports = removeNonASCII;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/replace.js":"var toString = require('../lang/toString');\nvar toArray = require('../lang/toArray');\n\n    /**\n     * Replace string(s) with the replacement(s) in the source.\n     */\n    function replace(str, search, replacements) {\n        str = toString(str);\n        search = toArray(search);\n        replacements = toArray(replacements);\n\n        var searchLength = search.length,\n            replacementsLength = replacements.length;\n\n        if (replacementsLength !== 1 && searchLength !== replacementsLength) {\n            throw new Error('Unequal number of searches and replacements');\n        }\n\n        var i = -1;\n        while (++i < searchLength) {\n            // Use the first replacement for all searches if only one\n            // replacement is provided\n            str = str.replace(\n                search[i],\n                replacements[(replacementsLength === 1) ? 0 : i]);\n        }\n\n        return str;\n    }\n\n    module.exports = replace;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/rpad.js":"var toString = require('../lang/toString');\nvar repeat = require('./repeat');\n\n    /**\n     * Pad string with `char` if its' length is smaller than `minLen`\n     */\n    function rpad(str, minLen, ch) {\n        str = toString(str);\n        ch = ch || ' ';\n        return (str.length < minLen)? str + repeat(ch, minLen - str.length) : str;\n    }\n\n    module.exports = rpad;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/sentenceCase.js":"var toString = require('../lang/toString');\nvar lowerCase = require('./lowerCase');\nvar upperCase = require('./upperCase');\n    /**\n     * UPPERCASE first char of each sentence and lowercase other chars.\n     */\n    function sentenceCase(str){\n        str = toString(str);\n\n        // Replace first char of each sentence (new line or after '.\\s+') to\n        // UPPERCASE\n        return lowerCase(str).replace(/(^\\w)|\\.\\s+(\\w)/gm, upperCase);\n    }\n    module.exports = sentenceCase;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/startsWith.js":"var toString = require('../lang/toString');\n    /**\n     * Checks if string starts with specified prefix.\n     */\n    function startsWith(str, prefix) {\n        str = toString(str);\n        prefix = toString(prefix);\n\n        return str.indexOf(prefix) === 0;\n    }\n\n    module.exports = startsWith;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/stripHtmlTags.js":"var toString = require('../lang/toString');\n    /**\n     * Remove HTML tags from string.\n     */\n    function stripHtmlTags(str){\n        str = toString(str);\n\n        return str.replace(/<[^>]*>/g, '');\n    }\n    module.exports = stripHtmlTags;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/underscore.js":"var toString = require('../lang/toString');\nvar slugify = require('./slugify');\nvar unCamelCase = require('./unCamelCase');\n    /**\n     * Replaces spaces with underscores, split camelCase text, remove non-word chars, remove accents and convert to lower case.\n     */\n    function underscore(str){\n        str = toString(str);\n        str = unCamelCase(str);\n        return slugify(str, \"_\");\n    }\n    module.exports = underscore;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/unescapeHtml.js":"var toString = require('../lang/toString');\n\n    /**\n     * Unescapes HTML special chars\n     */\n    function unescapeHtml(str){\n        str = toString(str)\n            .replace(/&amp;/g , '&')\n            .replace(/&lt;/g  , '<')\n            .replace(/&gt;/g  , '>')\n            .replace(/&#0*39;/g , \"'\")\n            .replace(/&quot;/g, '\"');\n        return str;\n    }\n\n    module.exports = unescapeHtml;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/unescapeUnicode.js":"var toString = require('../lang/toString');\n\n    /**\n     * Unescape unicode char sequences\n     */\n    function unescapeUnicode(str){\n        str = toString(str);\n        return str.replace(/\\\\u[0-9a-f]{4}/g, function(ch){\n            var code = parseInt(ch.slice(2), 16);\n            return String.fromCharCode(code);\n        });\n    }\n\n    module.exports = unescapeUnicode;\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/string/unhyphenate.js":"var toString = require('../lang/toString');\n    /**\n     * Replaces hyphens with spaces. (only hyphens between word chars)\n     */\n    function unhyphenate(str){\n        str = toString(str);\n        return str.replace(/(\\w)(-)(\\w)/g, '$1 $3');\n    }\n    module.exports = unhyphenate;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/time.js":"\n\n//automatically generated, do not edit!\n//run `node build` instead\nmodule.exports = {\n    'convert' : require('./time/convert'),\n    'now' : require('./time/now'),\n    'parseMs' : require('./time/parseMs'),\n    'toTimeString' : require('./time/toTimeString')\n};\n\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/time/parseMs.js":"var countSteps = require('../math/countSteps');\n\n    /**\n     * Parse timestamp into an object.\n     */\n    function parseMs(ms){\n        return {\n            milliseconds : countSteps(ms, 1, 1000),\n            seconds      : countSteps(ms, 1000, 60),\n            minutes      : countSteps(ms, 60000, 60),\n            hours        : countSteps(ms, 3600000, 24),\n            days         : countSteps(ms, 86400000)\n        };\n    }\n\n    module.exports = parseMs;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/time/toTimeString.js":"var countSteps = require('../math/countSteps');\nvar pad = require('../number/pad');\n\n    var HOUR = 3600000,\n        MINUTE = 60000,\n        SECOND = 1000;\n\n    /**\n     * Format timestamp into a time string.\n     */\n    function toTimeString(ms){\n        var h = ms < HOUR   ? 0 : countSteps(ms, HOUR),\n            m = ms < MINUTE ? 0 : countSteps(ms, MINUTE, 60),\n            s = ms < SECOND ? 0 : countSteps(ms, SECOND, 60),\n            str = '';\n\n        str += h? h + ':' : '';\n        str += pad(m, 2) + ':';\n        str += pad(s, 2);\n\n        return str;\n    }\n    module.exports = toTimeString;\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/src/array.js":"define(function(require){\n\n//automatically generated, do not edit!\n//run `node build` instead\nreturn {\n    'append' : require('./array/append'),\n    'collect' : require('./array/collect'),\n    'combine' : require('./array/combine'),\n    'compact' : require('./array/compact'),\n    'contains' : require('./array/contains'),\n    'difference' : require('./array/difference'),\n    'equals' : require('./array/equals'),\n    'every' : require('./array/every'),\n    'filter' : require('./array/filter'),\n    'find' : require('./array/find'),\n    'findIndex' : require('./array/findIndex'),\n    'findLast' : require('./array/findLast'),\n    'findLastIndex' : require('./array/findLastIndex'),\n    'flatten' : require('./array/flatten'),\n    'forEach' : require('./array/forEach'),\n    'groupBy' : require('./array/groupBy'),\n    'indexOf' : require('./array/indexOf'),\n    'indicesOf' : require('./array/indicesOf'),\n    'insert' : require('./array/insert'),\n    'intersection' : require('./array/intersection'),\n    'invoke' : require('./array/invoke'),\n    'join' : require('./array/join'),\n    'last' : require('./array/last'),\n    'lastIndexOf' : require('./array/lastIndexOf'),\n    'map' : require('./array/map'),\n    'max' : require('./array/max'),\n    'min' : require('./array/min'),\n    'pick' : require('./array/pick'),\n    'pluck' : require('./array/pluck'),\n    'range' : require('./array/range'),\n    'reduce' : require('./array/reduce'),\n    'reduceRight' : require('./array/reduceRight'),\n    'reject' : require('./array/reject'),\n    'remove' : require('./array/remove'),\n    'removeAll' : require('./array/removeAll'),\n    'reverse' : require('./array/reverse'),\n    'shuffle' : require('./array/shuffle'),\n    'slice' : require('./array/slice'),\n    'some' : require('./array/some'),\n    'sort' : require('./array/sort'),\n    'sortBy' : require('./array/sortBy'),\n    'split' : require('./array/split'),\n    'take' : require('./array/take'),\n    'toLookup' : require('./array/toLookup'),\n    'union' : require('./array/union'),\n    'unique' : require('./array/unique'),\n    'xor' : require('./array/xor'),\n    'zip' : require('./array/zip')\n};\n\n});\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/src/collection.js":"define(function(require){\n\n//automatically generated, do not edit!\n//run `node build` instead\nreturn {\n    'contains' : require('./collection/contains'),\n    'every' : require('./collection/every'),\n    'filter' : require('./collection/filter'),\n    'find' : require('./collection/find'),\n    'forEach' : require('./collection/forEach'),\n    'make_' : require('./collection/make_'),\n    'map' : require('./collection/map'),\n    'max' : require('./collection/max'),\n    'min' : require('./collection/min'),\n    'pluck' : require('./collection/pluck'),\n    'reduce' : require('./collection/reduce'),\n    'reject' : require('./collection/reject'),\n    'size' : require('./collection/size'),\n    'some' : require('./collection/some')\n};\n\n});\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/src/date.js":"define(function(require){\n\n//automatically generated, do not edit!\n//run `node build` instead\nreturn {\n    'dayOfTheYear' : require('./date/dayOfTheYear'),\n    'diff' : require('./date/diff'),\n    'i18n_' : require('./date/i18n_'),\n    'isLeapYear' : require('./date/isLeapYear'),\n    'isSame' : require('./date/isSame'),\n    'parseIso' : require('./date/parseIso'),\n    'quarter' : require('./date/quarter'),\n    'startOf' : require('./date/startOf'),\n    'strftime' : require('./date/strftime'),\n    'timezoneAbbr' : require('./date/timezoneAbbr'),\n    'timezoneOffset' : require('./date/timezoneOffset'),\n    'totalDaysInMonth' : require('./date/totalDaysInMonth'),\n    'totalDaysInYear' : require('./date/totalDaysInYear'),\n    'weekOfTheYear' : require('./date/weekOfTheYear')\n};\n\n});\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/src/function.js":"define(function(require){\n\n//automatically generated, do not edit!\n//run `node build` instead\nreturn {\n    'after' : require('./function/after'),\n    'awaitDelay' : require('./function/awaitDelay'),\n    'bind' : require('./function/bind'),\n    'compose' : require('./function/compose'),\n    'constant' : require('./function/constant'),\n    'debounce' : require('./function/debounce'),\n    'func' : require('./function/func'),\n    'identity' : require('./function/identity'),\n    'makeIterator_' : require('./function/makeIterator_'),\n    'memoize' : require('./function/memoize'),\n    'partial' : require('./function/partial'),\n    'prop' : require('./function/prop'),\n    'series' : require('./function/series'),\n    'throttle' : require('./function/throttle'),\n    'timeout' : require('./function/timeout'),\n    'times' : require('./function/times'),\n    'wrap' : require('./function/wrap')\n};\n\n});\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/src/lang.js":"define(function(require){\n\n//automatically generated, do not edit!\n//run `node build` instead\nreturn {\n    'GLOBAL' : require('./lang/GLOBAL'),\n    'clone' : require('./lang/clone'),\n    'createObject' : require('./lang/createObject'),\n    'ctorApply' : require('./lang/ctorApply'),\n    'deepClone' : require('./lang/deepClone'),\n    'deepEquals' : require('./lang/deepEquals'),\n    'defaults' : require('./lang/defaults'),\n    'inheritPrototype' : require('./lang/inheritPrototype'),\n    'is' : require('./lang/is'),\n    'isArguments' : require('./lang/isArguments'),\n    'isArray' : require('./lang/isArray'),\n    'isBoolean' : require('./lang/isBoolean'),\n    'isDate' : require('./lang/isDate'),\n    'isEmpty' : require('./lang/isEmpty'),\n    'isFinite' : require('./lang/isFinite'),\n    'isFunction' : require('./lang/isFunction'),\n    'isInteger' : require('./lang/isInteger'),\n    'isKind' : require('./lang/isKind'),\n    'isNaN' : require('./lang/isNaN'),\n    'isNull' : require('./lang/isNull'),\n    'isNumber' : require('./lang/isNumber'),\n    'isObject' : require('./lang/isObject'),\n    'isPlainObject' : require('./lang/isPlainObject'),\n    'isPrimitive' : require('./lang/isPrimitive'),\n    'isRegExp' : require('./lang/isRegExp'),\n    'isString' : require('./lang/isString'),\n    'isUndefined' : require('./lang/isUndefined'),\n    'isnt' : require('./lang/isnt'),\n    'kindOf' : require('./lang/kindOf'),\n    'toArray' : require('./lang/toArray'),\n    'toNumber' : require('./lang/toNumber'),\n    'toString' : require('./lang/toString')\n};\n\n});\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/src/math.js":"define(function(require){\n\n//automatically generated, do not edit!\n//run `node build` instead\nreturn {\n    'ceil' : require('./math/ceil'),\n    'clamp' : require('./math/clamp'),\n    'countSteps' : require('./math/countSteps'),\n    'floor' : require('./math/floor'),\n    'inRange' : require('./math/inRange'),\n    'isNear' : require('./math/isNear'),\n    'lerp' : require('./math/lerp'),\n    'loop' : require('./math/loop'),\n    'map' : require('./math/map'),\n    'norm' : require('./math/norm'),\n    'overflow' : require('./math/overflow'),\n    'round' : require('./math/round')\n};\n\n});\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/src/number.js":"define(function(require){\n\n//automatically generated, do not edit!\n//run `node build` instead\nreturn {\n    'MAX_INT' : require('./number/MAX_INT'),\n    'MAX_SAFE_INTEGER' : require('./number/MAX_SAFE_INTEGER'),\n    'MAX_UINT' : require('./number/MAX_UINT'),\n    'MIN_INT' : require('./number/MIN_INT'),\n    'abbreviate' : require('./number/abbreviate'),\n    'currencyFormat' : require('./number/currencyFormat'),\n    'enforcePrecision' : require('./number/enforcePrecision'),\n    'isNaN' : require('./number/isNaN'),\n    'nth' : require('./number/nth'),\n    'ordinal' : require('./number/ordinal'),\n    'pad' : require('./number/pad'),\n    'rol' : require('./number/rol'),\n    'ror' : require('./number/ror'),\n    'sign' : require('./number/sign'),\n    'toInt' : require('./number/toInt'),\n    'toUInt' : require('./number/toUInt'),\n    'toUInt31' : require('./number/toUInt31')\n};\n\n});\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/src/object.js":"define(function(require){\n\n//automatically generated, do not edit!\n//run `node build` instead\nreturn {\n    'bindAll' : require('./object/bindAll'),\n    'contains' : require('./object/contains'),\n    'deepFillIn' : require('./object/deepFillIn'),\n    'deepMatches' : require('./object/deepMatches'),\n    'deepMixIn' : require('./object/deepMixIn'),\n    'equals' : require('./object/equals'),\n    'every' : require('./object/every'),\n    'fillIn' : require('./object/fillIn'),\n    'filter' : require('./object/filter'),\n    'find' : require('./object/find'),\n    'flatten' : require('./object/flatten'),\n    'forIn' : require('./object/forIn'),\n    'forOwn' : require('./object/forOwn'),\n    'functions' : require('./object/functions'),\n    'get' : require('./object/get'),\n    'has' : require('./object/has'),\n    'hasOwn' : require('./object/hasOwn'),\n    'keys' : require('./object/keys'),\n    'map' : require('./object/map'),\n    'matches' : require('./object/matches'),\n    'max' : require('./object/max'),\n    'merge' : require('./object/merge'),\n    'min' : require('./object/min'),\n    'mixIn' : require('./object/mixIn'),\n    'namespace' : require('./object/namespace'),\n    'omit' : require('./object/omit'),\n    'pick' : require('./object/pick'),\n    'pluck' : require('./object/pluck'),\n    'reduce' : require('./object/reduce'),\n    'reject' : require('./object/reject'),\n    'result' : require('./object/result'),\n    'set' : require('./object/set'),\n    'size' : require('./object/size'),\n    'some' : require('./object/some'),\n    'unset' : require('./object/unset'),\n    'values' : require('./object/values')\n};\n\n});\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/src/queryString.js":"define(function(require){\n\n//automatically generated, do not edit!\n//run `node build` instead\nreturn {\n    'contains' : require('./queryString/contains'),\n    'decode' : require('./queryString/decode'),\n    'encode' : require('./queryString/encode'),\n    'getParam' : require('./queryString/getParam'),\n    'getQuery' : require('./queryString/getQuery'),\n    'parse' : require('./queryString/parse'),\n    'setParam' : require('./queryString/setParam')\n};\n\n});\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/src/random.js":"define(function(require){\n\n//automatically generated, do not edit!\n//run `node build` instead\nreturn {\n    'choice' : require('./random/choice'),\n    'guid' : require('./random/guid'),\n    'rand' : require('./random/rand'),\n    'randBit' : require('./random/randBit'),\n    'randBool' : require('./random/randBool'),\n    'randHex' : require('./random/randHex'),\n    'randInt' : require('./random/randInt'),\n    'randSign' : require('./random/randSign'),\n    'randString' : require('./random/randString'),\n    'random' : require('./random/random')\n};\n\n});\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/src/string.js":"define(function(require){\n\n//automatically generated, do not edit!\n//run `node build` instead\nreturn {\n    'WHITE_SPACES' : require('./string/WHITE_SPACES'),\n    'camelCase' : require('./string/camelCase'),\n    'contains' : require('./string/contains'),\n    'crop' : require('./string/crop'),\n    'endsWith' : require('./string/endsWith'),\n    'escapeHtml' : require('./string/escapeHtml'),\n    'escapeRegExp' : require('./string/escapeRegExp'),\n    'escapeUnicode' : require('./string/escapeUnicode'),\n    'hyphenate' : require('./string/hyphenate'),\n    'insert' : require('./string/insert'),\n    'interpolate' : require('./string/interpolate'),\n    'lowerCase' : require('./string/lowerCase'),\n    'lpad' : require('./string/lpad'),\n    'ltrim' : require('./string/ltrim'),\n    'makePath' : require('./string/makePath'),\n    'normalizeLineBreaks' : require('./string/normalizeLineBreaks'),\n    'pascalCase' : require('./string/pascalCase'),\n    'properCase' : require('./string/properCase'),\n    'removeNonASCII' : require('./string/removeNonASCII'),\n    'removeNonWord' : require('./string/removeNonWord'),\n    'repeat' : require('./string/repeat'),\n    'replace' : require('./string/replace'),\n    'replaceAccents' : require('./string/replaceAccents'),\n    'rpad' : require('./string/rpad'),\n    'rtrim' : require('./string/rtrim'),\n    'sentenceCase' : require('./string/sentenceCase'),\n    'slugify' : require('./string/slugify'),\n    'startsWith' : require('./string/startsWith'),\n    'stripHtmlTags' : require('./string/stripHtmlTags'),\n    'trim' : require('./string/trim'),\n    'truncate' : require('./string/truncate'),\n    'typecast' : require('./string/typecast'),\n    'unCamelCase' : require('./string/unCamelCase'),\n    'underscore' : require('./string/underscore'),\n    'unescapeHtml' : require('./string/unescapeHtml'),\n    'unescapeUnicode' : require('./string/unescapeUnicode'),\n    'unhyphenate' : require('./string/unhyphenate'),\n    'upperCase' : require('./string/upperCase')\n};\n\n});\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/src/time.js":"define(function(require){\n\n//automatically generated, do not edit!\n//run `node build` instead\nreturn {\n    'convert' : require('./time/convert'),\n    'now' : require('./time/now'),\n    'parseMs' : require('./time/parseMs'),\n    'toTimeString' : require('./time/toTimeString')\n};\n\n});\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date/i18n/de-DE.js":"\n    // de-DE (German)\n    module.exports = {\n        \"am\" : \"\",\n        \"pm\" : \"\",\n\n        \"x\": \"%d/%m/%y\",\n        \"X\": \"%H:%M:%S\",\n        \"c\": \"%a %d %b %Y %H:%M:%S %Z\",\n\n        \"months\" : [\n            \"Januar\",\n            \"Februar\",\n            \"März\",\n            \"April\",\n            \"Mai\",\n            \"Juni\",\n            \"Juli\",\n            \"August\",\n            \"September\",\n            \"Oktober\",\n            \"November\",\n            \"Dezember\"\n        ],\n\n        \"months_abbr\" : [\n            \"Jan\",\n            \"Febr\",\n            \"März\",\n            \"Apr\",\n            \"Mai\",\n            \"Juni\",\n            \"Juli\",\n            \"Aug\",\n            \"Sept\",\n            \"Okt\",\n            \"Nov\",\n            \"Dez\"\n        ],\n\n        \"days\" : [\n            \"Sonntag\",\n            \"Montag\",\n            \"Dienstag\",\n            \"Mittwoch\",\n            \"Donnerstag\",\n            \"Freitag\",\n            \"Samstag\"\n        ],\n\n        \"days_abbr\" : [\n            \"So\",\n            \"Mo\",\n            \"Di\",\n            \"Mi\",\n            \"Do\",\n            \"Fr\",\n            \"Sa\"\n        ]\n    };\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/date/i18n/pt-BR.js":"\n    // pt-BR (Brazillian Portuguese)\n    module.exports = {\n        \"am\" : \"\",\n        \"pm\" : \"\",\n\n        \"x\": \"%d/%m/%y\",\n        \"X\": \"%H:%M:%S\",\n        \"c\": \"%a %d %b %Y %H:%M:%S %Z\",\n\n        \"months\" : [\n            \"Janeiro\",\n            \"Fevereiro\",\n            \"Março\",\n            \"Abril\",\n            \"Maio\",\n            \"Junho\",\n            \"Julho\",\n            \"Agosto\",\n            \"Setembro\",\n            \"Outubro\",\n            \"Novembro\",\n            \"Dezembro\"\n        ],\n\n        \"months_abbr\" : [\n            \"Jan\",\n            \"Fev\",\n            \"Mar\",\n            \"Abr\",\n            \"Mai\",\n            \"Jun\",\n            \"Jul\",\n            \"Ago\",\n            \"Set\",\n            \"Out\",\n            \"Nov\",\n            \"Dez\"\n        ],\n\n        \"days\" : [\n            \"Domingo\",\n            \"Segunda\",\n            \"Terça\",\n            \"Quarta\",\n            \"Quinta\",\n            \"Sexta\",\n            \"Sábado\"\n        ],\n\n        \"days_abbr\" : [\n            \"Dom\",\n            \"Seg\",\n            \"Ter\",\n            \"Qua\",\n            \"Qui\",\n            \"Sex\",\n            \"Sáb\"\n        ]\n    };\n\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/src/date/i18n_.js":"define(['../object/mixIn', './i18n/en-US'], function(mixIn, enUS){\n\n    // we also use mixIn to make sure we don't affect the original locale\n    var activeLocale = mixIn({}, enUS, {\n        // we expose a \"set\" method to allow overriding the global locale\n        set : function(localeData){\n            mixIn(activeLocale, localeData);\n        }\n    });\n\n    return activeLocale;\n\n});\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/src/lang/GLOBAL.js":"define(function () {\n\n    // Reference to the global context (works on ES3 and ES5-strict mode)\n    //jshint -W061, -W064\n    return Function('return this')();\n\n});\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/src/random/random.js":"define(function () {\n\n    /**\n     * Just a wrapper to Math.random. No methods inside mout/random should call\n     * Math.random() directly so we can inject the pseudo-random number\n     * generator if needed (ie. in case we need a seeded random or a better\n     * algorithm than the native one)\n     */\n    function random(){\n        return random.get();\n    }\n\n    // we expose the method so it can be swapped if needed\n    random.get = Math.random;\n\n    return random;\n\n});\n","/home/travis/build/npmtest/node-npmtest-mout/node_modules/mout/src/time/now.js":"define(function () {\n\n    /**\n     * Get current time in miliseconds\n     */\n    function now(){\n        // yes, we defer the work to another function to allow mocking it\n        // during the tests\n        return now.get();\n    }\n\n    now.get = (typeof Date.now === 'function')? Date.now : function(){\n        return +(new Date());\n    };\n\n    return now;\n\n});\n"}